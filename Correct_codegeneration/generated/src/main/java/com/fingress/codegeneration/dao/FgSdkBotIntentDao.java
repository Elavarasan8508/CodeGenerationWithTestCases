package com.bsit.codegeneration.dao;

import org.jdbi.v3.sqlobject.statement.SqlQuery;
import org.jdbi.v3.sqlobject.statement.SqlUpdate;
import org.jdbi.v3.sqlobject.statement.GetGeneratedKeys;
import org.jdbi.v3.sqlobject.customizer.Bind;
import org.jdbi.v3.sqlobject.customizer.BindBean;
import org.jdbi.v3.sqlobject.config.RegisterRowMapper;
import com.bsit.codegeneration.record.FgSdkBotIntent;
import com.bsit.codegeneration.mapper.FgSdkBotIntentMapper;
import java.util.*;

@RegisterRowMapper(FgSdkBotIntentMapper.class)
public interface FgSdkBotIntentDao {

    @SqlQuery("SELECT * FROM FG_SDK_BOT_INTENT")
    public List<FgSdkBotIntent> findAll();

    @SqlQuery("SELECT * FROM FG_SDK_BOT_INTENT WHERE id = :id")
    public Optional<FgSdkBotIntent> findById(@Bind("id") Long id);

    @SqlUpdate("INSERT INTO FG_SDK_BOT_INTENT(ID, REFERENCE_ID, APPLICANT_PARTY_CODE, APPLICANT_REF_ID, ISSUING_PARTY_CODE, TYPE_CODE, SUB_TYPE_CODE, ACTIVE_CODE, STAGE_CODE, STATUS_CODE, CREATED_ON, CREATED_BY, LAST_UPDATED_ON, LAST_UPDATED_BY, LAST_AUTHORISED_ON, LAST_AUTHORISED_BY, TEMPLATE, IS_TEMPLATE, INTENT_MODEL, INTENT_NAME, PARENT_INTENT, DATASET, INTENT_TYPE, AUTHORIZATION, SHOW, PROMPT, PHRASE_NAME, PHRASE_STATUS, PARAMETER_FIELD, PARAMETER_DATATYPE, PARAMETER, PARAMETER_STATUS, INPUT, REQUIRED, API_METHOD, CONTENT, PARENT_REF_ID, PARENT_VERSION_ID) VALUES (:ID, :REFERENCE_ID, :APPLICANT_PARTY_CODE, :APPLICANT_REF_ID, :ISSUING_PARTY_CODE, :TYPE_CODE, :SUB_TYPE_CODE, :ACTIVE_CODE, :STAGE_CODE, :STATUS_CODE, :CREATED_ON, :CREATED_BY, :LAST_UPDATED_ON, :LAST_UPDATED_BY, :LAST_AUTHORISED_ON, :LAST_AUTHORISED_BY, :TEMPLATE, :IS_TEMPLATE, :INTENT_MODEL, :INTENT_NAME, :PARENT_INTENT, :DATASET, :INTENT_TYPE, :AUTHORIZATION, :SHOW, :PROMPT, :PHRASE_NAME, :PHRASE_STATUS, :PARAMETER_FIELD, :PARAMETER_DATATYPE, :PARAMETER, :PARAMETER_STATUS, :INPUT, :REQUIRED, :API_METHOD, :CONTENT, :PARENT_REF_ID, :PARENT_VERSION_ID)")
    @GetGeneratedKeys()
    public Long insert(@BindBean() FgSdkBotIntent entity);

    @SqlQuery("UPDATE FG_SDK_BOT_INTENT SET ID = :ID, REFERENCE_ID = :REFERENCE_ID, APPLICANT_PARTY_CODE = :APPLICANT_PARTY_CODE, APPLICANT_REF_ID = :APPLICANT_REF_ID, ISSUING_PARTY_CODE = :ISSUING_PARTY_CODE, TYPE_CODE = :TYPE_CODE, SUB_TYPE_CODE = :SUB_TYPE_CODE, ACTIVE_CODE = :ACTIVE_CODE, STAGE_CODE = :STAGE_CODE, STATUS_CODE = :STATUS_CODE, CREATED_ON = :CREATED_ON, CREATED_BY = :CREATED_BY, LAST_UPDATED_ON = :LAST_UPDATED_ON, LAST_UPDATED_BY = :LAST_UPDATED_BY, LAST_AUTHORISED_ON = :LAST_AUTHORISED_ON, LAST_AUTHORISED_BY = :LAST_AUTHORISED_BY, TEMPLATE = :TEMPLATE, IS_TEMPLATE = :IS_TEMPLATE, INTENT_MODEL = :INTENT_MODEL, INTENT_NAME = :INTENT_NAME, PARENT_INTENT = :PARENT_INTENT, DATASET = :DATASET, INTENT_TYPE = :INTENT_TYPE, AUTHORIZATION = :AUTHORIZATION, SHOW = :SHOW, PROMPT = :PROMPT, PHRASE_NAME = :PHRASE_NAME, PHRASE_STATUS = :PHRASE_STATUS, PARAMETER_FIELD = :PARAMETER_FIELD, PARAMETER_DATATYPE = :PARAMETER_DATATYPE, PARAMETER = :PARAMETER, PARAMETER_STATUS = :PARAMETER_STATUS, INPUT = :INPUT, REQUIRED = :REQUIRED, API_METHOD = :API_METHOD, CONTENT = :CONTENT, PARENT_REF_ID = :PARENT_REF_ID, PARENT_VERSION_ID = :PARENT_VERSION_ID WHERE id = :id")
    public int update(@BindBean() FgSdkBotIntent entity);

    @SqlQuery("DELETE FROM FG_SDK_BOT_INTENT WHERE id = :id")
    public int delete(@Bind("id") Long id);
}
