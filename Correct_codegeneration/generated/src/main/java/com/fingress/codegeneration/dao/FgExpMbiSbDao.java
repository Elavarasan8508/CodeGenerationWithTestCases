package com.bsit.codegeneration.dao;

import org.jdbi.v3.sqlobject.statement.SqlQuery;
import org.jdbi.v3.sqlobject.statement.SqlUpdate;
import org.jdbi.v3.sqlobject.statement.GetGeneratedKeys;
import org.jdbi.v3.sqlobject.customizer.Bind;
import org.jdbi.v3.sqlobject.customizer.BindBean;
import org.jdbi.v3.sqlobject.config.RegisterRowMapper;
import com.bsit.codegeneration.record.FgExpMbiSb;
import com.bsit.codegeneration.mapper.FgExpMbiSbMapper;
import java.util.*;

@RegisterRowMapper(FgExpMbiSbMapper.class)
public interface FgExpMbiSbDao {

    @SqlQuery("SELECT * FROM FG_EXP_MBI_SB")
    public List<FgExpMbiSb> findAll();

    @SqlQuery("SELECT * FROM FG_EXP_MBI_SB WHERE id = :id")
    public Optional<FgExpMbiSb> findById(@Bind("id") String id);

    @SqlUpdate("INSERT INTO FG_EXP_MBI_SB(ID, REFERENCE_ID, TYPE_CODE, SUB_TYPE_CODE, ACTIVE_CODE, STAGE_CODE, STATUS_CODE, CREATED_ON, CREATED_BY, LAST_UPDATED_ON, LAST_UPDATED_BY, LAST_AUTHORISED_ON, LAST_AUTHORISED_BY, TEMPLATE, IS_TEMPLATE, SHIPBILLNO, SHIPBILLDATE, FORMNO, IE_CODE, EXP_AGENCY, ADCODE, LEODATE, OS_PERIOD, AD_BILL_NO, SB_STATUS, INV_SL_NO, INV_NO, PORTCODE, EXP_TYPE, INV_DATE, INV_STATUS, FOB_AMT, FOBCURRCODE, UTIL_FOB_AMT, FRIEGHT_AMT, FRIEGHTCURRCODE, UTIL_FRIEGHT_AMT, INS_AMT, INSCURRCODE, UTIL_INS_AMT, HS_CODE, GOOD_DESC, PORT_OF_DEST, TRANSPORT_DOC_NO, BILL_NO, SB_AMOUNT, SB_OS_AMT, TOTAL_SETTLED_AMT, BILL_UTIL_AMT, BILL_AMT, PARENT_REF_ID, PARENT_VERSION_ID, SB_SHORTFALL, SB_REASON, ENDORSED_AMT, BILL_TYPE) VALUES (:ID, :REFERENCE_ID, :TYPE_CODE, :SUB_TYPE_CODE, :ACTIVE_CODE, :STAGE_CODE, :STATUS_CODE, :CREATED_ON, :CREATED_BY, :LAST_UPDATED_ON, :LAST_UPDATED_BY, :LAST_AUTHORISED_ON, :LAST_AUTHORISED_BY, :TEMPLATE, :IS_TEMPLATE, :SHIPBILLNO, :SHIPBILLDATE, :FORMNO, :IE_CODE, :EXP_AGENCY, :ADCODE, :LEODATE, :OS_PERIOD, :AD_BILL_NO, :SB_STATUS, :INV_SL_NO, :INV_NO, :PORTCODE, :EXP_TYPE, :INV_DATE, :INV_STATUS, :FOB_AMT, :FOBCURRCODE, :UTIL_FOB_AMT, :FRIEGHT_AMT, :FRIEGHTCURRCODE, :UTIL_FRIEGHT_AMT, :INS_AMT, :INSCURRCODE, :UTIL_INS_AMT, :HS_CODE, :GOOD_DESC, :PORT_OF_DEST, :TRANSPORT_DOC_NO, :BILL_NO, :SB_AMOUNT, :SB_OS_AMT, :TOTAL_SETTLED_AMT, :BILL_UTIL_AMT, :BILL_AMT, :PARENT_REF_ID, :PARENT_VERSION_ID, :SB_SHORTFALL, :SB_REASON, :ENDORSED_AMT, :BILL_TYPE)")
    @GetGeneratedKeys()
    public String insert(@BindBean() FgExpMbiSb entity);

    @SqlQuery("UPDATE FG_EXP_MBI_SB SET ID = :ID, REFERENCE_ID = :REFERENCE_ID, TYPE_CODE = :TYPE_CODE, SUB_TYPE_CODE = :SUB_TYPE_CODE, ACTIVE_CODE = :ACTIVE_CODE, STAGE_CODE = :STAGE_CODE, STATUS_CODE = :STATUS_CODE, CREATED_ON = :CREATED_ON, CREATED_BY = :CREATED_BY, LAST_UPDATED_ON = :LAST_UPDATED_ON, LAST_UPDATED_BY = :LAST_UPDATED_BY, LAST_AUTHORISED_ON = :LAST_AUTHORISED_ON, LAST_AUTHORISED_BY = :LAST_AUTHORISED_BY, TEMPLATE = :TEMPLATE, IS_TEMPLATE = :IS_TEMPLATE, SHIPBILLNO = :SHIPBILLNO, SHIPBILLDATE = :SHIPBILLDATE, FORMNO = :FORMNO, IE_CODE = :IE_CODE, EXP_AGENCY = :EXP_AGENCY, ADCODE = :ADCODE, LEODATE = :LEODATE, OS_PERIOD = :OS_PERIOD, AD_BILL_NO = :AD_BILL_NO, SB_STATUS = :SB_STATUS, INV_SL_NO = :INV_SL_NO, INV_NO = :INV_NO, PORTCODE = :PORTCODE, EXP_TYPE = :EXP_TYPE, INV_DATE = :INV_DATE, INV_STATUS = :INV_STATUS, FOB_AMT = :FOB_AMT, FOBCURRCODE = :FOBCURRCODE, UTIL_FOB_AMT = :UTIL_FOB_AMT, FRIEGHT_AMT = :FRIEGHT_AMT, FRIEGHTCURRCODE = :FRIEGHTCURRCODE, UTIL_FRIEGHT_AMT = :UTIL_FRIEGHT_AMT, INS_AMT = :INS_AMT, INSCURRCODE = :INSCURRCODE, UTIL_INS_AMT = :UTIL_INS_AMT, HS_CODE = :HS_CODE, GOOD_DESC = :GOOD_DESC, PORT_OF_DEST = :PORT_OF_DEST, TRANSPORT_DOC_NO = :TRANSPORT_DOC_NO, BILL_NO = :BILL_NO, SB_AMOUNT = :SB_AMOUNT, SB_OS_AMT = :SB_OS_AMT, TOTAL_SETTLED_AMT = :TOTAL_SETTLED_AMT, BILL_UTIL_AMT = :BILL_UTIL_AMT, BILL_AMT = :BILL_AMT, PARENT_REF_ID = :PARENT_REF_ID, PARENT_VERSION_ID = :PARENT_VERSION_ID, SB_SHORTFALL = :SB_SHORTFALL, SB_REASON = :SB_REASON, ENDORSED_AMT = :ENDORSED_AMT, BILL_TYPE = :BILL_TYPE WHERE id = :id")
    public int update(@BindBean() FgExpMbiSb entity);

    @SqlQuery("DELETE FROM FG_EXP_MBI_SB WHERE id = :id")
    public int delete(@Bind("id") String id);
}
