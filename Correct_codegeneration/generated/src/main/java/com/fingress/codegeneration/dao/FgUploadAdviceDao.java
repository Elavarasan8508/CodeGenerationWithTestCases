package com.bsit.codegeneration.dao;

import org.jdbi.v3.sqlobject.statement.SqlQuery;
import org.jdbi.v3.sqlobject.statement.SqlUpdate;
import org.jdbi.v3.sqlobject.statement.GetGeneratedKeys;
import org.jdbi.v3.sqlobject.customizer.Bind;
import org.jdbi.v3.sqlobject.customizer.BindBean;
import org.jdbi.v3.sqlobject.config.RegisterRowMapper;
import com.bsit.codegeneration.record.FgUploadAdvice;
import com.bsit.codegeneration.mapper.FgUploadAdviceMapper;
import java.util.*;

@RegisterRowMapper(FgUploadAdviceMapper.class)
public interface FgUploadAdviceDao {

    @SqlQuery("SELECT * FROM FG_UPLOAD_ADVICE")
    public List<FgUploadAdvice> findAll();

    @SqlQuery("SELECT * FROM FG_UPLOAD_ADVICE WHERE id = :id")
    public Optional<FgUploadAdvice> findById(@Bind("id") String id);

    @SqlUpdate("INSERT INTO FG_UPLOAD_ADVICE(ID, REFERENCE_ID, TYPE_CODE, SUB_TYPE_CODE, ACTIVE_CODE, STAGE_CODE, STATUS_CODE, CREATED_ON, CREATED_BY, LAST_UPDATED_ON, LAST_UPDATED_BY, LAST_AUTHORISED_ON, LAST_AUTHORISED_BY, TEMPLATE, IS_TEMPLATE, VENDOR_CODE, INVOICE_NUMBER, INVOICE_DATE, BILL_DUE_DATE, CURRENCY, INVOICE_AMOUNT, INVOICE_REF, SERIAL_NO, DOCUMENT_NO, OTHER_DEDUCTIONS, TOTAL_DEDUCTED_AMOUNT, NET_AMOUNT_PAYABLE, BOE_DATE, PAYMENT_DETAILS_6, PAYMENT_DETAILS_7, PAYMENT_DETAILS_8, PAYMENT_DETAILS_9, PAYMENT_DETAILS_10, CLIENT_REF_NO, INVOICE_DR_NOTE_DATE, INVOICE_DR_NOTE_NO, TENURE, INTEREST_RATE, AMOUNT_A, AMOUNT_B, AMOUNT_C, INVOICE_DEBIT_NOTE_AMOUNT, NARRATION, BILL_NO, NET_AMOUNT, BILL_DATE, HUNDI_NUMBER, LINE_NO_OF_ADVICE, ANNEXURE_TEXT_CONTENT, INVOICE_DATE_SOMANY, PARENT_REF_ID, PARENT_VERSION_ID, DISCOUNT_RATE, GROSS_AMOUNT, TDS_AMOUNT, BANK_CHARGES, EQUIVALENT_AMOUNT, EQUIVALENT_CURRENCY, DISPLAY_AMOUNT, DISPLAY_CURRENCY, AUTH_EQUIVALENT_AMOUNT, AUTH_EQUIVALENT_CURRENCY, DISPLAY_EQUIVALENT_AMOUNT, DISPLAY_EQUIVALENT_CURRENCY, AUTH_FX_BASE_RATE, DISPLAY_FX_BASE_RATE) VALUES (:ID, :REFERENCE_ID, :TYPE_CODE, :SUB_TYPE_CODE, :ACTIVE_CODE, :STAGE_CODE, :STATUS_CODE, :CREATED_ON, :CREATED_BY, :LAST_UPDATED_ON, :LAST_UPDATED_BY, :LAST_AUTHORISED_ON, :LAST_AUTHORISED_BY, :TEMPLATE, :IS_TEMPLATE, :VENDOR_CODE, :INVOICE_NUMBER, :INVOICE_DATE, :BILL_DUE_DATE, :CURRENCY, :INVOICE_AMOUNT, :INVOICE_REF, :SERIAL_NO, :DOCUMENT_NO, :OTHER_DEDUCTIONS, :TOTAL_DEDUCTED_AMOUNT, :NET_AMOUNT_PAYABLE, :BOE_DATE, :PAYMENT_DETAILS_6, :PAYMENT_DETAILS_7, :PAYMENT_DETAILS_8, :PAYMENT_DETAILS_9, :PAYMENT_DETAILS_10, :CLIENT_REF_NO, :INVOICE_DR_NOTE_DATE, :INVOICE_DR_NOTE_NO, :TENURE, :INTEREST_RATE, :AMOUNT_A, :AMOUNT_B, :AMOUNT_C, :INVOICE_DEBIT_NOTE_AMOUNT, :NARRATION, :BILL_NO, :NET_AMOUNT, :BILL_DATE, :HUNDI_NUMBER, :LINE_NO_OF_ADVICE, :ANNEXURE_TEXT_CONTENT, :INVOICE_DATE_SOMANY, :PARENT_REF_ID, :PARENT_VERSION_ID, :DISCOUNT_RATE, :GROSS_AMOUNT, :TDS_AMOUNT, :BANK_CHARGES, :EQUIVALENT_AMOUNT, :EQUIVALENT_CURRENCY, :DISPLAY_AMOUNT, :DISPLAY_CURRENCY, :AUTH_EQUIVALENT_AMOUNT, :AUTH_EQUIVALENT_CURRENCY, :DISPLAY_EQUIVALENT_AMOUNT, :DISPLAY_EQUIVALENT_CURRENCY, :AUTH_FX_BASE_RATE, :DISPLAY_FX_BASE_RATE)")
    @GetGeneratedKeys()
    public String insert(@BindBean() FgUploadAdvice entity);

    @SqlQuery("UPDATE FG_UPLOAD_ADVICE SET ID = :ID, REFERENCE_ID = :REFERENCE_ID, TYPE_CODE = :TYPE_CODE, SUB_TYPE_CODE = :SUB_TYPE_CODE, ACTIVE_CODE = :ACTIVE_CODE, STAGE_CODE = :STAGE_CODE, STATUS_CODE = :STATUS_CODE, CREATED_ON = :CREATED_ON, CREATED_BY = :CREATED_BY, LAST_UPDATED_ON = :LAST_UPDATED_ON, LAST_UPDATED_BY = :LAST_UPDATED_BY, LAST_AUTHORISED_ON = :LAST_AUTHORISED_ON, LAST_AUTHORISED_BY = :LAST_AUTHORISED_BY, TEMPLATE = :TEMPLATE, IS_TEMPLATE = :IS_TEMPLATE, VENDOR_CODE = :VENDOR_CODE, INVOICE_NUMBER = :INVOICE_NUMBER, INVOICE_DATE = :INVOICE_DATE, BILL_DUE_DATE = :BILL_DUE_DATE, CURRENCY = :CURRENCY, INVOICE_AMOUNT = :INVOICE_AMOUNT, INVOICE_REF = :INVOICE_REF, SERIAL_NO = :SERIAL_NO, DOCUMENT_NO = :DOCUMENT_NO, OTHER_DEDUCTIONS = :OTHER_DEDUCTIONS, TOTAL_DEDUCTED_AMOUNT = :TOTAL_DEDUCTED_AMOUNT, NET_AMOUNT_PAYABLE = :NET_AMOUNT_PAYABLE, BOE_DATE = :BOE_DATE, PAYMENT_DETAILS_6 = :PAYMENT_DETAILS_6, PAYMENT_DETAILS_7 = :PAYMENT_DETAILS_7, PAYMENT_DETAILS_8 = :PAYMENT_DETAILS_8, PAYMENT_DETAILS_9 = :PAYMENT_DETAILS_9, PAYMENT_DETAILS_10 = :PAYMENT_DETAILS_10, CLIENT_REF_NO = :CLIENT_REF_NO, INVOICE_DR_NOTE_DATE = :INVOICE_DR_NOTE_DATE, INVOICE_DR_NOTE_NO = :INVOICE_DR_NOTE_NO, TENURE = :TENURE, INTEREST_RATE = :INTEREST_RATE, AMOUNT_A = :AMOUNT_A, AMOUNT_B = :AMOUNT_B, AMOUNT_C = :AMOUNT_C, INVOICE_DEBIT_NOTE_AMOUNT = :INVOICE_DEBIT_NOTE_AMOUNT, NARRATION = :NARRATION, BILL_NO = :BILL_NO, NET_AMOUNT = :NET_AMOUNT, BILL_DATE = :BILL_DATE, HUNDI_NUMBER = :HUNDI_NUMBER, LINE_NO_OF_ADVICE = :LINE_NO_OF_ADVICE, ANNEXURE_TEXT_CONTENT = :ANNEXURE_TEXT_CONTENT, INVOICE_DATE_SOMANY = :INVOICE_DATE_SOMANY, PARENT_REF_ID = :PARENT_REF_ID, PARENT_VERSION_ID = :PARENT_VERSION_ID, DISCOUNT_RATE = :DISCOUNT_RATE, GROSS_AMOUNT = :GROSS_AMOUNT, TDS_AMOUNT = :TDS_AMOUNT, BANK_CHARGES = :BANK_CHARGES, EQUIVALENT_AMOUNT = :EQUIVALENT_AMOUNT, EQUIVALENT_CURRENCY = :EQUIVALENT_CURRENCY, DISPLAY_AMOUNT = :DISPLAY_AMOUNT, DISPLAY_CURRENCY = :DISPLAY_CURRENCY, AUTH_EQUIVALENT_AMOUNT = :AUTH_EQUIVALENT_AMOUNT, AUTH_EQUIVALENT_CURRENCY = :AUTH_EQUIVALENT_CURRENCY, DISPLAY_EQUIVALENT_AMOUNT = :DISPLAY_EQUIVALENT_AMOUNT, DISPLAY_EQUIVALENT_CURRENCY = :DISPLAY_EQUIVALENT_CURRENCY, AUTH_FX_BASE_RATE = :AUTH_FX_BASE_RATE, DISPLAY_FX_BASE_RATE = :DISPLAY_FX_BASE_RATE WHERE id = :id")
    public int update(@BindBean() FgUploadAdvice entity);

    @SqlQuery("DELETE FROM FG_UPLOAD_ADVICE WHERE id = :id")
    public int delete(@Bind("id") String id);
}
