package com.bsit.codegeneration.dao;

import org.jdbi.v3.sqlobject.statement.SqlQuery;
import org.jdbi.v3.sqlobject.statement.SqlUpdate;
import org.jdbi.v3.sqlobject.statement.GetGeneratedKeys;
import org.jdbi.v3.sqlobject.customizer.Bind;
import org.jdbi.v3.sqlobject.customizer.BindBean;
import org.jdbi.v3.sqlobject.config.RegisterRowMapper;
import com.bsit.codegeneration.record.FgLiquidationReq;
import com.bsit.codegeneration.mapper.FgLiquidationReqMapper;
import java.util.*;

@RegisterRowMapper(FgLiquidationReqMapper.class)
public interface FgLiquidationReqDao {

    @SqlQuery("SELECT * FROM FG_LIQUIDATION_REQ")
    public List<FgLiquidationReq> findAll();

    @SqlQuery("SELECT * FROM FG_LIQUIDATION_REQ WHERE id = :id")
    public Optional<FgLiquidationReq> findById(@Bind("id") String id);

    @SqlUpdate("INSERT INTO FG_LIQUIDATION_REQ(ID, REFERENCE_ID, TYPE_CODE, SUB_TYPE_CODE, ACTIVE_CODE, STAGE_CODE, STATUS_CODE, PROCESS_ID, CREATED_ON, CREATED_BY, LAST_UPDATED_ON, LAST_UPDATED_BY, LAST_AUTHORISED_ON, LAST_AUTHORISED_BY, TEMPLATE, APPLICANT_PARTY, FULFILLMENT_PARTY, IS_TEMPLATE, TD_ACCOUNT, ACCOUNT_NAME, PRINCIPAL_AMOUNT, LIQ_INTEREST_RATE, CURRENT_BALANCE, START_DATE, LIQ_MATURITY_DATE, MATURITY_AMOUNT, INTEREST_ACCOUNT, PRINCIPAL_ACCOUNT, LIQUID_TYPE, LIQ_WITHDRAWN_AMOUNT, REMARKS, TERMS, AVAILABLE_BALANCE, LIQ_DEBIT_ACC_NO, LIQ_DEPOSIT_ACC_NO, LIQ_DEPOSIT_AMOUNT, LIEN_MARKED, NAME_OF_ACC, LIEN_AMOUNT, TRANSFER_TO, TASK_REASON, SCHEME_CODE, USER_TYPE, MAX_BOOKING_LIMIT, OTP_COUNT, OTP_RESENT, OTP_SENT_TIME, OTP_LOCKED_TIME, OTP_UNLOCK_TIME, OTP_FAILED_COUNT, UTILIZED_BOOKING_LIMIT, AVAILABLE_BOOKING_LIMIT, PENDING_UTILISED_LIMIT, PRODUCT_STATUS, FINACLE_STATUS, FINACLE_ERROR_CODE, FINACLE_ERROR_DESC, LIQ_WITHDRAWAL_INTEREST, ORIGIN) VALUES (:ID, :REFERENCE_ID, :TYPE_CODE, :SUB_TYPE_CODE, :ACTIVE_CODE, :STAGE_CODE, :STATUS_CODE, :PROCESS_ID, :CREATED_ON, :CREATED_BY, :LAST_UPDATED_ON, :LAST_UPDATED_BY, :LAST_AUTHORISED_ON, :LAST_AUTHORISED_BY, :TEMPLATE, :APPLICANT_PARTY, :FULFILLMENT_PARTY, :IS_TEMPLATE, :TD_ACCOUNT, :ACCOUNT_NAME, :PRINCIPAL_AMOUNT, :LIQ_INTEREST_RATE, :CURRENT_BALANCE, :START_DATE, :LIQ_MATURITY_DATE, :MATURITY_AMOUNT, :INTEREST_ACCOUNT, :PRINCIPAL_ACCOUNT, :LIQUID_TYPE, :LIQ_WITHDRAWN_AMOUNT, :REMARKS, :TERMS, :AVAILABLE_BALANCE, :LIQ_DEBIT_ACC_NO, :LIQ_DEPOSIT_ACC_NO, :LIQ_DEPOSIT_AMOUNT, :LIEN_MARKED, :NAME_OF_ACC, :LIEN_AMOUNT, :TRANSFER_TO, :TASK_REASON, :SCHEME_CODE, :USER_TYPE, :MAX_BOOKING_LIMIT, :OTP_COUNT, :OTP_RESENT, :OTP_SENT_TIME, :OTP_LOCKED_TIME, :OTP_UNLOCK_TIME, :OTP_FAILED_COUNT, :UTILIZED_BOOKING_LIMIT, :AVAILABLE_BOOKING_LIMIT, :PENDING_UTILISED_LIMIT, :PRODUCT_STATUS, :FINACLE_STATUS, :FINACLE_ERROR_CODE, :FINACLE_ERROR_DESC, :LIQ_WITHDRAWAL_INTEREST, :ORIGIN)")
    @GetGeneratedKeys()
    public String insert(@BindBean() FgLiquidationReq entity);

    @SqlQuery("UPDATE FG_LIQUIDATION_REQ SET ID = :ID, REFERENCE_ID = :REFERENCE_ID, TYPE_CODE = :TYPE_CODE, SUB_TYPE_CODE = :SUB_TYPE_CODE, ACTIVE_CODE = :ACTIVE_CODE, STAGE_CODE = :STAGE_CODE, STATUS_CODE = :STATUS_CODE, PROCESS_ID = :PROCESS_ID, CREATED_ON = :CREATED_ON, CREATED_BY = :CREATED_BY, LAST_UPDATED_ON = :LAST_UPDATED_ON, LAST_UPDATED_BY = :LAST_UPDATED_BY, LAST_AUTHORISED_ON = :LAST_AUTHORISED_ON, LAST_AUTHORISED_BY = :LAST_AUTHORISED_BY, TEMPLATE = :TEMPLATE, APPLICANT_PARTY = :APPLICANT_PARTY, FULFILLMENT_PARTY = :FULFILLMENT_PARTY, IS_TEMPLATE = :IS_TEMPLATE, TD_ACCOUNT = :TD_ACCOUNT, ACCOUNT_NAME = :ACCOUNT_NAME, PRINCIPAL_AMOUNT = :PRINCIPAL_AMOUNT, LIQ_INTEREST_RATE = :LIQ_INTEREST_RATE, CURRENT_BALANCE = :CURRENT_BALANCE, START_DATE = :START_DATE, LIQ_MATURITY_DATE = :LIQ_MATURITY_DATE, MATURITY_AMOUNT = :MATURITY_AMOUNT, INTEREST_ACCOUNT = :INTEREST_ACCOUNT, PRINCIPAL_ACCOUNT = :PRINCIPAL_ACCOUNT, LIQUID_TYPE = :LIQUID_TYPE, LIQ_WITHDRAWN_AMOUNT = :LIQ_WITHDRAWN_AMOUNT, REMARKS = :REMARKS, TERMS = :TERMS, AVAILABLE_BALANCE = :AVAILABLE_BALANCE, LIQ_DEBIT_ACC_NO = :LIQ_DEBIT_ACC_NO, LIQ_DEPOSIT_ACC_NO = :LIQ_DEPOSIT_ACC_NO, LIQ_DEPOSIT_AMOUNT = :LIQ_DEPOSIT_AMOUNT, LIEN_MARKED = :LIEN_MARKED, NAME_OF_ACC = :NAME_OF_ACC, LIEN_AMOUNT = :LIEN_AMOUNT, TRANSFER_TO = :TRANSFER_TO, TASK_REASON = :TASK_REASON, SCHEME_CODE = :SCHEME_CODE, USER_TYPE = :USER_TYPE, MAX_BOOKING_LIMIT = :MAX_BOOKING_LIMIT, OTP_COUNT = :OTP_COUNT, OTP_RESENT = :OTP_RESENT, OTP_SENT_TIME = :OTP_SENT_TIME, OTP_LOCKED_TIME = :OTP_LOCKED_TIME, OTP_UNLOCK_TIME = :OTP_UNLOCK_TIME, OTP_FAILED_COUNT = :OTP_FAILED_COUNT, UTILIZED_BOOKING_LIMIT = :UTILIZED_BOOKING_LIMIT, AVAILABLE_BOOKING_LIMIT = :AVAILABLE_BOOKING_LIMIT, PENDING_UTILISED_LIMIT = :PENDING_UTILISED_LIMIT, PRODUCT_STATUS = :PRODUCT_STATUS, FINACLE_STATUS = :FINACLE_STATUS, FINACLE_ERROR_CODE = :FINACLE_ERROR_CODE, FINACLE_ERROR_DESC = :FINACLE_ERROR_DESC, LIQ_WITHDRAWAL_INTEREST = :LIQ_WITHDRAWAL_INTEREST, ORIGIN = :ORIGIN WHERE id = :id")
    public int update(@BindBean() FgLiquidationReq entity);

    @SqlQuery("DELETE FROM FG_LIQUIDATION_REQ WHERE id = :id")
    public int delete(@Bind("id") String id);
}
