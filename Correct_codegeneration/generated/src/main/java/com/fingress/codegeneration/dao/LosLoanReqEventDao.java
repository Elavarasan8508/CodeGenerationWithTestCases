package com.bsit.codegeneration.dao;

import org.jdbi.v3.sqlobject.statement.SqlQuery;
import org.jdbi.v3.sqlobject.statement.SqlUpdate;
import org.jdbi.v3.sqlobject.statement.GetGeneratedKeys;
import org.jdbi.v3.sqlobject.customizer.Bind;
import org.jdbi.v3.sqlobject.customizer.BindBean;
import org.jdbi.v3.sqlobject.config.RegisterRowMapper;
import com.bsit.codegeneration.record.LosLoanReqEvent;
import com.bsit.codegeneration.mapper.LosLoanReqEventMapper;
import java.util.*;

@RegisterRowMapper(LosLoanReqEventMapper.class)
public interface LosLoanReqEventDao {

    @SqlQuery("SELECT * FROM LOS_LOAN_REQ_EVENT")
    public List<LosLoanReqEvent> findAll();

    @SqlQuery("SELECT * FROM LOS_LOAN_REQ_EVENT WHERE id = :id")
    public Optional<LosLoanReqEvent> findById(@Bind("id") String id);

    @SqlUpdate("INSERT INTO LOS_LOAN_REQ_EVENT(ID, REFERENCE_ID, TYPE_CODE, SUB_TYPE_CODE, ACTIVE_CODE, STAGE_CODE, STATUS_CODE, PROCESS_ID, CREATED_ON, CREATED_BY, LAST_UPDATED_ON, LAST_UPDATED_BY, LAST_AUTHORISED_ON, LAST_AUTHORISED_BY, TEMPLATE, APPLICANT_PARTY, FULFILLMENT_PARTY, IS_TEMPLATE, EVENT_COMMENTS, EVENT_DUE_DATE, EVENT_RESPONDED_ON, EVENT_COMPLETED_OM, EVENT_EXPIRED_ON, UPLOAD_REF_ID, REJECTION_REASON_CODE, REJECTION_COMMENTS, EVENT_CATEGORY_CODE, EVENT_TYPE_CODE, EVENT_OCCURRED_ON, EVENT_TRIGGER_ROLE, ACTION_COMMENTS, ACTION_REQUIRED_FLAG, ACTION_TYPE_CODE, ACTION_STATUS_CODE, ACTION_PERFORMER_ROLE, LOAN_REQUEST_REFERENCE, PRODUCT_CODE, SUB_PRODUCT_CODE, SEGMENT_CODE, VERSION_ID, IS_MASTER_VERSION, EVENT_SUBJECT, PRODUCT_STATUS_CODE, ACCEPTANCE_PARTY) VALUES (:ID, :REFERENCE_ID, :TYPE_CODE, :SUB_TYPE_CODE, :ACTIVE_CODE, :STAGE_CODE, :STATUS_CODE, :PROCESS_ID, :CREATED_ON, :CREATED_BY, :LAST_UPDATED_ON, :LAST_UPDATED_BY, :LAST_AUTHORISED_ON, :LAST_AUTHORISED_BY, :TEMPLATE, :APPLICANT_PARTY, :FULFILLMENT_PARTY, :IS_TEMPLATE, :EVENT_COMMENTS, :EVENT_DUE_DATE, :EVENT_RESPONDED_ON, :EVENT_COMPLETED_OM, :EVENT_EXPIRED_ON, :UPLOAD_REF_ID, :REJECTION_REASON_CODE, :REJECTION_COMMENTS, :EVENT_CATEGORY_CODE, :EVENT_TYPE_CODE, :EVENT_OCCURRED_ON, :EVENT_TRIGGER_ROLE, :ACTION_COMMENTS, :ACTION_REQUIRED_FLAG, :ACTION_TYPE_CODE, :ACTION_STATUS_CODE, :ACTION_PERFORMER_ROLE, :LOAN_REQUEST_REFERENCE, :PRODUCT_CODE, :SUB_PRODUCT_CODE, :SEGMENT_CODE, :VERSION_ID, :IS_MASTER_VERSION, :EVENT_SUBJECT, :PRODUCT_STATUS_CODE, :ACCEPTANCE_PARTY)")
    @GetGeneratedKeys()
    public String insert(@BindBean() LosLoanReqEvent entity);

    @SqlQuery("UPDATE LOS_LOAN_REQ_EVENT SET ID = :ID, REFERENCE_ID = :REFERENCE_ID, TYPE_CODE = :TYPE_CODE, SUB_TYPE_CODE = :SUB_TYPE_CODE, ACTIVE_CODE = :ACTIVE_CODE, STAGE_CODE = :STAGE_CODE, STATUS_CODE = :STATUS_CODE, PROCESS_ID = :PROCESS_ID, CREATED_ON = :CREATED_ON, CREATED_BY = :CREATED_BY, LAST_UPDATED_ON = :LAST_UPDATED_ON, LAST_UPDATED_BY = :LAST_UPDATED_BY, LAST_AUTHORISED_ON = :LAST_AUTHORISED_ON, LAST_AUTHORISED_BY = :LAST_AUTHORISED_BY, TEMPLATE = :TEMPLATE, APPLICANT_PARTY = :APPLICANT_PARTY, FULFILLMENT_PARTY = :FULFILLMENT_PARTY, IS_TEMPLATE = :IS_TEMPLATE, EVENT_COMMENTS = :EVENT_COMMENTS, EVENT_DUE_DATE = :EVENT_DUE_DATE, EVENT_RESPONDED_ON = :EVENT_RESPONDED_ON, EVENT_COMPLETED_OM = :EVENT_COMPLETED_OM, EVENT_EXPIRED_ON = :EVENT_EXPIRED_ON, UPLOAD_REF_ID = :UPLOAD_REF_ID, REJECTION_REASON_CODE = :REJECTION_REASON_CODE, REJECTION_COMMENTS = :REJECTION_COMMENTS, EVENT_CATEGORY_CODE = :EVENT_CATEGORY_CODE, EVENT_TYPE_CODE = :EVENT_TYPE_CODE, EVENT_OCCURRED_ON = :EVENT_OCCURRED_ON, EVENT_TRIGGER_ROLE = :EVENT_TRIGGER_ROLE, ACTION_COMMENTS = :ACTION_COMMENTS, ACTION_REQUIRED_FLAG = :ACTION_REQUIRED_FLAG, ACTION_TYPE_CODE = :ACTION_TYPE_CODE, ACTION_STATUS_CODE = :ACTION_STATUS_CODE, ACTION_PERFORMER_ROLE = :ACTION_PERFORMER_ROLE, LOAN_REQUEST_REFERENCE = :LOAN_REQUEST_REFERENCE, PRODUCT_CODE = :PRODUCT_CODE, SUB_PRODUCT_CODE = :SUB_PRODUCT_CODE, SEGMENT_CODE = :SEGMENT_CODE, VERSION_ID = :VERSION_ID, IS_MASTER_VERSION = :IS_MASTER_VERSION, EVENT_SUBJECT = :EVENT_SUBJECT, PRODUCT_STATUS_CODE = :PRODUCT_STATUS_CODE, ACCEPTANCE_PARTY = :ACCEPTANCE_PARTY WHERE id = :id")
    public int update(@BindBean() LosLoanReqEvent entity);

    @SqlQuery("DELETE FROM LOS_LOAN_REQ_EVENT WHERE id = :id")
    public int delete(@Bind("id") String id);
}
