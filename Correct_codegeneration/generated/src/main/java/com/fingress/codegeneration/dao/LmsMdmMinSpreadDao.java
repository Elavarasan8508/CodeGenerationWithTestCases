package com.bsit.codegeneration.dao;

import org.jdbi.v3.sqlobject.statement.SqlQuery;
import org.jdbi.v3.sqlobject.statement.SqlUpdate;
import org.jdbi.v3.sqlobject.statement.GetGeneratedKeys;
import org.jdbi.v3.sqlobject.customizer.Bind;
import org.jdbi.v3.sqlobject.customizer.BindBean;
import org.jdbi.v3.sqlobject.config.RegisterRowMapper;
import com.bsit.codegeneration.record.LmsMdmMinSpread;
import com.bsit.codegeneration.mapper.LmsMdmMinSpreadMapper;
import java.util.*;

@RegisterRowMapper(LmsMdmMinSpreadMapper.class)
public interface LmsMdmMinSpreadDao {

    @SqlQuery("SELECT * FROM LMS_MDM_MIN_SPREAD")
    public List<LmsMdmMinSpread> findAll();

    @SqlQuery("SELECT * FROM LMS_MDM_MIN_SPREAD WHERE id = :id")
    public Optional<LmsMdmMinSpread> findById(@Bind("id") String id);

    @SqlUpdate("INSERT INTO LMS_MDM_MIN_SPREAD(ID, REFERENCE_ID, TYPE_CODE, SUB_TYPE_CODE, ACTIVE_CODE, STAGE_CODE, STATUS_CODE, PROCESS_ID, CREATED_ON, CREATED_BY, LAST_UPDATED_ON, LAST_UPDATED_BY, LAST_AUTHORISED_ON, LAST_AUTHORISED_BY, TEMPLATE, APPLICANT_PARTY, FULFILLMENT_PARTY, UPLOAD_REF_ID, ATTACHMENT_ID, PARENT_ID, PARENT_REF_ID, PARENT_VERSION_ID, IS_TEMPLATE, SEGMENT_CODE, INTERNAL_RATING_CODE, EXTERNAL_RATING_CODE, SHORT_TERM_SPREAD_PERCENT, LONG_TERM_SPREAD_PERCENT, MIN_SPREAD_STATUS_CODE, PRODUCT_CODE, SUB_PRODUCT_CODE) VALUES (:ID, :REFERENCE_ID, :TYPE_CODE, :SUB_TYPE_CODE, :ACTIVE_CODE, :STAGE_CODE, :STATUS_CODE, :PROCESS_ID, :CREATED_ON, :CREATED_BY, :LAST_UPDATED_ON, :LAST_UPDATED_BY, :LAST_AUTHORISED_ON, :LAST_AUTHORISED_BY, :TEMPLATE, :APPLICANT_PARTY, :FULFILLMENT_PARTY, :UPLOAD_REF_ID, :ATTACHMENT_ID, :PARENT_ID, :PARENT_REF_ID, :PARENT_VERSION_ID, :IS_TEMPLATE, :SEGMENT_CODE, :INTERNAL_RATING_CODE, :EXTERNAL_RATING_CODE, :SHORT_TERM_SPREAD_PERCENT, :LONG_TERM_SPREAD_PERCENT, :MIN_SPREAD_STATUS_CODE, :PRODUCT_CODE, :SUB_PRODUCT_CODE)")
    @GetGeneratedKeys()
    public String insert(@BindBean() LmsMdmMinSpread entity);

    @SqlQuery("UPDATE LMS_MDM_MIN_SPREAD SET ID = :ID, REFERENCE_ID = :REFERENCE_ID, TYPE_CODE = :TYPE_CODE, SUB_TYPE_CODE = :SUB_TYPE_CODE, ACTIVE_CODE = :ACTIVE_CODE, STAGE_CODE = :STAGE_CODE, STATUS_CODE = :STATUS_CODE, PROCESS_ID = :PROCESS_ID, CREATED_ON = :CREATED_ON, CREATED_BY = :CREATED_BY, LAST_UPDATED_ON = :LAST_UPDATED_ON, LAST_UPDATED_BY = :LAST_UPDATED_BY, LAST_AUTHORISED_ON = :LAST_AUTHORISED_ON, LAST_AUTHORISED_BY = :LAST_AUTHORISED_BY, TEMPLATE = :TEMPLATE, APPLICANT_PARTY = :APPLICANT_PARTY, FULFILLMENT_PARTY = :FULFILLMENT_PARTY, UPLOAD_REF_ID = :UPLOAD_REF_ID, ATTACHMENT_ID = :ATTACHMENT_ID, PARENT_ID = :PARENT_ID, PARENT_REF_ID = :PARENT_REF_ID, PARENT_VERSION_ID = :PARENT_VERSION_ID, IS_TEMPLATE = :IS_TEMPLATE, SEGMENT_CODE = :SEGMENT_CODE, INTERNAL_RATING_CODE = :INTERNAL_RATING_CODE, EXTERNAL_RATING_CODE = :EXTERNAL_RATING_CODE, SHORT_TERM_SPREAD_PERCENT = :SHORT_TERM_SPREAD_PERCENT, LONG_TERM_SPREAD_PERCENT = :LONG_TERM_SPREAD_PERCENT, MIN_SPREAD_STATUS_CODE = :MIN_SPREAD_STATUS_CODE, PRODUCT_CODE = :PRODUCT_CODE, SUB_PRODUCT_CODE = :SUB_PRODUCT_CODE WHERE id = :id")
    public int update(@BindBean() LmsMdmMinSpread entity);

    @SqlQuery("DELETE FROM LMS_MDM_MIN_SPREAD WHERE id = :id")
    public int delete(@Bind("id") String id);
}
