package com.bsit.codegeneration.dao;

import org.jdbi.v3.sqlobject.statement.SqlQuery;
import org.jdbi.v3.sqlobject.statement.SqlUpdate;
import org.jdbi.v3.sqlobject.statement.GetGeneratedKeys;
import org.jdbi.v3.sqlobject.customizer.Bind;
import org.jdbi.v3.sqlobject.customizer.BindBean;
import org.jdbi.v3.sqlobject.config.RegisterRowMapper;
import com.bsit.codegeneration.record.DoSmartCollect;
import com.bsit.codegeneration.mapper.DoSmartCollectMapper;
import java.util.*;

@RegisterRowMapper(DoSmartCollectMapper.class)
public interface DoSmartCollectDao {

    @SqlQuery("SELECT * FROM DO_SMART_COLLECT")
    public List<DoSmartCollect> findAll();

    @SqlQuery("SELECT * FROM DO_SMART_COLLECT WHERE id = :id")
    public Optional<DoSmartCollect> findById(@Bind("id") String id);

    @SqlUpdate("INSERT INTO DO_SMART_COLLECT(ID, REFERENCE_ID, TYPE_CODE, SUB_TYPE_CODE, ACTIVE_CODE, STAGE_CODE, STATUS_CODE, PROCESS_ID, CREATED_ON, CREATED_BY, LAST_UPDATED_ON, LAST_UPDATED_BY, LAST_AUTHORISED_ON, LAST_AUTHORISED_BY, TEMPLATE, APPLICANT_USER_CRN, FULFILLMENT_PARTY, IS_TEMPLATE, COMPANY_NAME, ACCOUNT_NUMBER, MAILING_ADDRESS, CONTACT_PERSON, CONTACT_MOBILE_NUMBER, APPLICATION_REFERENCE, REPORTING_FREQUENCY, PRODUCT_NAME, PRODUCT_DISPLAY_STATUS, TAT_START_TIME, TAT_END_TIME, EXISTING_USER_NAME, USER_EMAIL, ISSUING_PARTY_CODE, CUSTOMER_TYPE_DESC, APPLICANT_USER_NAME, MAKER_COMMENTS, TASK_REASON, COMPANY_CRN) VALUES (:ID, :REFERENCE_ID, :TYPE_CODE, :SUB_TYPE_CODE, :ACTIVE_CODE, :STAGE_CODE, :STATUS_CODE, :PROCESS_ID, :CREATED_ON, :CREATED_BY, :LAST_UPDATED_ON, :LAST_UPDATED_BY, :LAST_AUTHORISED_ON, :LAST_AUTHORISED_BY, :TEMPLATE, :APPLICANT_USER_CRN, :FULFILLMENT_PARTY, :IS_TEMPLATE, :COMPANY_NAME, :ACCOUNT_NUMBER, :MAILING_ADDRESS, :CONTACT_PERSON, :CONTACT_MOBILE_NUMBER, :APPLICATION_REFERENCE, :REPORTING_FREQUENCY, :PRODUCT_NAME, :PRODUCT_DISPLAY_STATUS, :TAT_START_TIME, :TAT_END_TIME, :EXISTING_USER_NAME, :USER_EMAIL, :ISSUING_PARTY_CODE, :CUSTOMER_TYPE_DESC, :APPLICANT_USER_NAME, :MAKER_COMMENTS, :TASK_REASON, :COMPANY_CRN)")
    @GetGeneratedKeys()
    public String insert(@BindBean() DoSmartCollect entity);

    @SqlQuery("UPDATE DO_SMART_COLLECT SET ID = :ID, REFERENCE_ID = :REFERENCE_ID, TYPE_CODE = :TYPE_CODE, SUB_TYPE_CODE = :SUB_TYPE_CODE, ACTIVE_CODE = :ACTIVE_CODE, STAGE_CODE = :STAGE_CODE, STATUS_CODE = :STATUS_CODE, PROCESS_ID = :PROCESS_ID, CREATED_ON = :CREATED_ON, CREATED_BY = :CREATED_BY, LAST_UPDATED_ON = :LAST_UPDATED_ON, LAST_UPDATED_BY = :LAST_UPDATED_BY, LAST_AUTHORISED_ON = :LAST_AUTHORISED_ON, LAST_AUTHORISED_BY = :LAST_AUTHORISED_BY, TEMPLATE = :TEMPLATE, APPLICANT_USER_CRN = :APPLICANT_USER_CRN, FULFILLMENT_PARTY = :FULFILLMENT_PARTY, IS_TEMPLATE = :IS_TEMPLATE, COMPANY_NAME = :COMPANY_NAME, ACCOUNT_NUMBER = :ACCOUNT_NUMBER, MAILING_ADDRESS = :MAILING_ADDRESS, CONTACT_PERSON = :CONTACT_PERSON, CONTACT_MOBILE_NUMBER = :CONTACT_MOBILE_NUMBER, APPLICATION_REFERENCE = :APPLICATION_REFERENCE, REPORTING_FREQUENCY = :REPORTING_FREQUENCY, PRODUCT_NAME = :PRODUCT_NAME, PRODUCT_DISPLAY_STATUS = :PRODUCT_DISPLAY_STATUS, TAT_START_TIME = :TAT_START_TIME, TAT_END_TIME = :TAT_END_TIME, EXISTING_USER_NAME = :EXISTING_USER_NAME, USER_EMAIL = :USER_EMAIL, ISSUING_PARTY_CODE = :ISSUING_PARTY_CODE, CUSTOMER_TYPE_DESC = :CUSTOMER_TYPE_DESC, APPLICANT_USER_NAME = :APPLICANT_USER_NAME, MAKER_COMMENTS = :MAKER_COMMENTS, TASK_REASON = :TASK_REASON, COMPANY_CRN = :COMPANY_CRN WHERE id = :id")
    public int update(@BindBean() DoSmartCollect entity);

    @SqlQuery("DELETE FROM DO_SMART_COLLECT WHERE id = :id")
    public int delete(@Bind("id") String id);
}
