package com.bsit.codegeneration.dao;

import org.jdbi.v3.sqlobject.statement.SqlQuery;
import org.jdbi.v3.sqlobject.statement.SqlUpdate;
import org.jdbi.v3.sqlobject.statement.GetGeneratedKeys;
import org.jdbi.v3.sqlobject.customizer.Bind;
import org.jdbi.v3.sqlobject.customizer.BindBean;
import org.jdbi.v3.sqlobject.config.RegisterRowMapper;
import com.bsit.codegeneration.record.FgVoltasm;
import com.bsit.codegeneration.mapper.FgVoltasmMapper;
import java.util.*;

@RegisterRowMapper(FgVoltasmMapper.class)
public interface FgVoltasmDao {

    @SqlQuery("SELECT * FROM FG_VOLTASM")
    public List<FgVoltasm> findAll();

    @SqlQuery("SELECT * FROM FG_VOLTASM WHERE id = :id")
    public Optional<FgVoltasm> findById(@Bind("id") String id);

    @SqlUpdate("INSERT INTO FG_VOLTASM(ID, REFERENCE_ID, TYPE_CODE, SUB_TYPE_CODE, ACTIVE_CODE, STAGE_CODE, STATUS_CODE, CREATED_ON, CREATED_BY, LAST_UPDATED_ON, LAST_UPDATED_BY, LAST_AUTHORISED_ON, LAST_AUTHORISED_BY, TEMPLATE, IS_TEMPLATE, CLIENT_CODE, PRODUCT_CODE, PAYMENT_TYPE, PAYMENT_REF_NO, PAYMENT_DATE, INSTRUMENT_DATE, AMOUNT, BANK_CODE_INDICATOR, BENEFICIARY_CODE, BENEFICIARY_NAME, BENEFICIARY_BANK, BENEFICIARY_BRANCH, LOCATION, PRINT_LOCATION, INSTRUMENT_NO, BENEFICIARY_ADDRESS_1, BENEFICIARY_ADDRESS_2, BENEFICIARY_ADDRESS_3, BENEFICIARY_ADDRESS_4, BENEFICIARY_EMAIL, BENEFICIARY_MOBILE, DEBIT_NARRATION, CREDIT_NARRATION, PAYMENT_DETAILS_1, PAYMENT_DETAILS_2, PAYMENT_DETAILS_3, PAYMENT_DETAILS_4, SR_NO, DOCUMENT_NO, INV_REF_NO, INV_DATE, INV_AMOUNT, OTHER_DEDUCTIONS, TDS_AMOUNT, TOTAL_DEDUCTED_AMOUNT, NET_AMOUNT_PAYABLE, UPLOAD_REF_ID, LINE_NO, UPLOAD_LAYOUT_UUID, BENEFICIARY_ACC_NO, DR_AC_NO, EQUIVALENT_AMOUNT, EQUIVALENT_CURRENCY, DISPLAY_AMOUNT, DISPLAY_CURRENCY, AUTH_EQUIVALENT_AMOUNT, AUTH_EQUIVALENT_CURRENCY, DISPLAY_EQUIVALENT_AMOUNT, DISPLAY_EQUIVALENT_CURRENCY, AUTH_FX_BASE_RATE, DISPLAY_FX_BASE_RATE, APPLICANT_PARTY_CODE, ISSUING_PARTY_CODE, FILE_NAME) VALUES (:ID, :REFERENCE_ID, :TYPE_CODE, :SUB_TYPE_CODE, :ACTIVE_CODE, :STAGE_CODE, :STATUS_CODE, :CREATED_ON, :CREATED_BY, :LAST_UPDATED_ON, :LAST_UPDATED_BY, :LAST_AUTHORISED_ON, :LAST_AUTHORISED_BY, :TEMPLATE, :IS_TEMPLATE, :CLIENT_CODE, :PRODUCT_CODE, :PAYMENT_TYPE, :PAYMENT_REF_NO, :PAYMENT_DATE, :INSTRUMENT_DATE, :AMOUNT, :BANK_CODE_INDICATOR, :BENEFICIARY_CODE, :BENEFICIARY_NAME, :BENEFICIARY_BANK, :BENEFICIARY_BRANCH, :LOCATION, :PRINT_LOCATION, :INSTRUMENT_NO, :BENEFICIARY_ADDRESS_1, :BENEFICIARY_ADDRESS_2, :BENEFICIARY_ADDRESS_3, :BENEFICIARY_ADDRESS_4, :BENEFICIARY_EMAIL, :BENEFICIARY_MOBILE, :DEBIT_NARRATION, :CREDIT_NARRATION, :PAYMENT_DETAILS_1, :PAYMENT_DETAILS_2, :PAYMENT_DETAILS_3, :PAYMENT_DETAILS_4, :SR_NO, :DOCUMENT_NO, :INV_REF_NO, :INV_DATE, :INV_AMOUNT, :OTHER_DEDUCTIONS, :TDS_AMOUNT, :TOTAL_DEDUCTED_AMOUNT, :NET_AMOUNT_PAYABLE, :UPLOAD_REF_ID, :LINE_NO, :UPLOAD_LAYOUT_UUID, :BENEFICIARY_ACC_NO, :DR_AC_NO, :EQUIVALENT_AMOUNT, :EQUIVALENT_CURRENCY, :DISPLAY_AMOUNT, :DISPLAY_CURRENCY, :AUTH_EQUIVALENT_AMOUNT, :AUTH_EQUIVALENT_CURRENCY, :DISPLAY_EQUIVALENT_AMOUNT, :DISPLAY_EQUIVALENT_CURRENCY, :AUTH_FX_BASE_RATE, :DISPLAY_FX_BASE_RATE, :APPLICANT_PARTY_CODE, :ISSUING_PARTY_CODE, :FILE_NAME)")
    @GetGeneratedKeys()
    public String insert(@BindBean() FgVoltasm entity);

    @SqlQuery("UPDATE FG_VOLTASM SET ID = :ID, REFERENCE_ID = :REFERENCE_ID, TYPE_CODE = :TYPE_CODE, SUB_TYPE_CODE = :SUB_TYPE_CODE, ACTIVE_CODE = :ACTIVE_CODE, STAGE_CODE = :STAGE_CODE, STATUS_CODE = :STATUS_CODE, CREATED_ON = :CREATED_ON, CREATED_BY = :CREATED_BY, LAST_UPDATED_ON = :LAST_UPDATED_ON, LAST_UPDATED_BY = :LAST_UPDATED_BY, LAST_AUTHORISED_ON = :LAST_AUTHORISED_ON, LAST_AUTHORISED_BY = :LAST_AUTHORISED_BY, TEMPLATE = :TEMPLATE, IS_TEMPLATE = :IS_TEMPLATE, CLIENT_CODE = :CLIENT_CODE, PRODUCT_CODE = :PRODUCT_CODE, PAYMENT_TYPE = :PAYMENT_TYPE, PAYMENT_REF_NO = :PAYMENT_REF_NO, PAYMENT_DATE = :PAYMENT_DATE, INSTRUMENT_DATE = :INSTRUMENT_DATE, AMOUNT = :AMOUNT, BANK_CODE_INDICATOR = :BANK_CODE_INDICATOR, BENEFICIARY_CODE = :BENEFICIARY_CODE, BENEFICIARY_NAME = :BENEFICIARY_NAME, BENEFICIARY_BANK = :BENEFICIARY_BANK, BENEFICIARY_BRANCH = :BENEFICIARY_BRANCH, LOCATION = :LOCATION, PRINT_LOCATION = :PRINT_LOCATION, INSTRUMENT_NO = :INSTRUMENT_NO, BENEFICIARY_ADDRESS_1 = :BENEFICIARY_ADDRESS_1, BENEFICIARY_ADDRESS_2 = :BENEFICIARY_ADDRESS_2, BENEFICIARY_ADDRESS_3 = :BENEFICIARY_ADDRESS_3, BENEFICIARY_ADDRESS_4 = :BENEFICIARY_ADDRESS_4, BENEFICIARY_EMAIL = :BENEFICIARY_EMAIL, BENEFICIARY_MOBILE = :BENEFICIARY_MOBILE, DEBIT_NARRATION = :DEBIT_NARRATION, CREDIT_NARRATION = :CREDIT_NARRATION, PAYMENT_DETAILS_1 = :PAYMENT_DETAILS_1, PAYMENT_DETAILS_2 = :PAYMENT_DETAILS_2, PAYMENT_DETAILS_3 = :PAYMENT_DETAILS_3, PAYMENT_DETAILS_4 = :PAYMENT_DETAILS_4, SR_NO = :SR_NO, DOCUMENT_NO = :DOCUMENT_NO, INV_REF_NO = :INV_REF_NO, INV_DATE = :INV_DATE, INV_AMOUNT = :INV_AMOUNT, OTHER_DEDUCTIONS = :OTHER_DEDUCTIONS, TDS_AMOUNT = :TDS_AMOUNT, TOTAL_DEDUCTED_AMOUNT = :TOTAL_DEDUCTED_AMOUNT, NET_AMOUNT_PAYABLE = :NET_AMOUNT_PAYABLE, UPLOAD_REF_ID = :UPLOAD_REF_ID, LINE_NO = :LINE_NO, UPLOAD_LAYOUT_UUID = :UPLOAD_LAYOUT_UUID, BENEFICIARY_ACC_NO = :BENEFICIARY_ACC_NO, DR_AC_NO = :DR_AC_NO, EQUIVALENT_AMOUNT = :EQUIVALENT_AMOUNT, EQUIVALENT_CURRENCY = :EQUIVALENT_CURRENCY, DISPLAY_AMOUNT = :DISPLAY_AMOUNT, DISPLAY_CURRENCY = :DISPLAY_CURRENCY, AUTH_EQUIVALENT_AMOUNT = :AUTH_EQUIVALENT_AMOUNT, AUTH_EQUIVALENT_CURRENCY = :AUTH_EQUIVALENT_CURRENCY, DISPLAY_EQUIVALENT_AMOUNT = :DISPLAY_EQUIVALENT_AMOUNT, DISPLAY_EQUIVALENT_CURRENCY = :DISPLAY_EQUIVALENT_CURRENCY, AUTH_FX_BASE_RATE = :AUTH_FX_BASE_RATE, DISPLAY_FX_BASE_RATE = :DISPLAY_FX_BASE_RATE, APPLICANT_PARTY_CODE = :APPLICANT_PARTY_CODE, ISSUING_PARTY_CODE = :ISSUING_PARTY_CODE, FILE_NAME = :FILE_NAME WHERE id = :id")
    public int update(@BindBean() FgVoltasm entity);

    @SqlQuery("DELETE FROM FG_VOLTASM WHERE id = :id")
    public int delete(@Bind("id") String id);
}
