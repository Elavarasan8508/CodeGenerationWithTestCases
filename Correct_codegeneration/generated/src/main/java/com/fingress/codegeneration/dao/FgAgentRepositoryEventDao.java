package com.bsit.codegeneration.dao;

import org.jdbi.v3.sqlobject.statement.SqlQuery;
import org.jdbi.v3.sqlobject.statement.SqlUpdate;
import org.jdbi.v3.sqlobject.statement.GetGeneratedKeys;
import org.jdbi.v3.sqlobject.customizer.Bind;
import org.jdbi.v3.sqlobject.customizer.BindBean;
import org.jdbi.v3.sqlobject.config.RegisterRowMapper;
import com.bsit.codegeneration.record.FgAgentRepositoryEvent;
import com.bsit.codegeneration.mapper.FgAgentRepositoryEventMapper;
import java.util.*;

@RegisterRowMapper(FgAgentRepositoryEventMapper.class)
public interface FgAgentRepositoryEventDao {

    @SqlQuery("SELECT * FROM FG_AGENT_REPOSITORY_EVENT")
    public List<FgAgentRepositoryEvent> findAll();

    @SqlQuery("SELECT * FROM FG_AGENT_REPOSITORY_EVENT WHERE id = :id")
    public Optional<FgAgentRepositoryEvent> findById(@Bind("id") Long id);

    @SqlUpdate("INSERT INTO FG_AGENT_REPOSITORY_EVENT(ID, REFERENCE_ID, TYPE_CODE, SUB_TYPE_CODE, ACTIVE_CODE, STAGE_CODE, STATUS_CODE, CREATED_ON, CREATED_BY, LAST_UPDATED_ON, LAST_UPDATED_BY, LAST_AUTHORISED_ON, LAST_AUTHORISED_BY, TEMPLATE, IS_TEMPLATE, AGENT_REF_ID, PURPOSE_CODE, AGENT_CATEGORY, AGENT_TYPE, AGENT_SCOPE, AGENT_POOL_CODE, OWNER_ORG_TYPE, OWNER_ORG_CODE, SCOPE_ORG_TYPE, SCOPE_ORG_CODE, START_TIME, LAST_RUN_TIME, LAST_RUN_STATUS, LAST_HEALTH_TIME, LAST_HEALTH_STATUS) VALUES (:ID, :REFERENCE_ID, :TYPE_CODE, :SUB_TYPE_CODE, :ACTIVE_CODE, :STAGE_CODE, :STATUS_CODE, :CREATED_ON, :CREATED_BY, :LAST_UPDATED_ON, :LAST_UPDATED_BY, :LAST_AUTHORISED_ON, :LAST_AUTHORISED_BY, :TEMPLATE, :IS_TEMPLATE, :AGENT_REF_ID, :PURPOSE_CODE, :AGENT_CATEGORY, :AGENT_TYPE, :AGENT_SCOPE, :AGENT_POOL_CODE, :OWNER_ORG_TYPE, :OWNER_ORG_CODE, :SCOPE_ORG_TYPE, :SCOPE_ORG_CODE, :START_TIME, :LAST_RUN_TIME, :LAST_RUN_STATUS, :LAST_HEALTH_TIME, :LAST_HEALTH_STATUS)")
    @GetGeneratedKeys()
    public Long insert(@BindBean() FgAgentRepositoryEvent entity);

    @SqlQuery("UPDATE FG_AGENT_REPOSITORY_EVENT SET ID = :ID, REFERENCE_ID = :REFERENCE_ID, TYPE_CODE = :TYPE_CODE, SUB_TYPE_CODE = :SUB_TYPE_CODE, ACTIVE_CODE = :ACTIVE_CODE, STAGE_CODE = :STAGE_CODE, STATUS_CODE = :STATUS_CODE, CREATED_ON = :CREATED_ON, CREATED_BY = :CREATED_BY, LAST_UPDATED_ON = :LAST_UPDATED_ON, LAST_UPDATED_BY = :LAST_UPDATED_BY, LAST_AUTHORISED_ON = :LAST_AUTHORISED_ON, LAST_AUTHORISED_BY = :LAST_AUTHORISED_BY, TEMPLATE = :TEMPLATE, IS_TEMPLATE = :IS_TEMPLATE, AGENT_REF_ID = :AGENT_REF_ID, PURPOSE_CODE = :PURPOSE_CODE, AGENT_CATEGORY = :AGENT_CATEGORY, AGENT_TYPE = :AGENT_TYPE, AGENT_SCOPE = :AGENT_SCOPE, AGENT_POOL_CODE = :AGENT_POOL_CODE, OWNER_ORG_TYPE = :OWNER_ORG_TYPE, OWNER_ORG_CODE = :OWNER_ORG_CODE, SCOPE_ORG_TYPE = :SCOPE_ORG_TYPE, SCOPE_ORG_CODE = :SCOPE_ORG_CODE, START_TIME = :START_TIME, LAST_RUN_TIME = :LAST_RUN_TIME, LAST_RUN_STATUS = :LAST_RUN_STATUS, LAST_HEALTH_TIME = :LAST_HEALTH_TIME, LAST_HEALTH_STATUS = :LAST_HEALTH_STATUS WHERE id = :id")
    public int update(@BindBean() FgAgentRepositoryEvent entity);

    @SqlQuery("DELETE FROM FG_AGENT_REPOSITORY_EVENT WHERE id = :id")
    public int delete(@Bind("id") Long id);
}
