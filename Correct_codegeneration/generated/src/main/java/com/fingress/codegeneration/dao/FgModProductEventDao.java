package com.bsit.codegeneration.dao;

import org.jdbi.v3.sqlobject.statement.SqlQuery;
import org.jdbi.v3.sqlobject.statement.SqlUpdate;
import org.jdbi.v3.sqlobject.statement.GetGeneratedKeys;
import org.jdbi.v3.sqlobject.customizer.Bind;
import org.jdbi.v3.sqlobject.customizer.BindBean;
import org.jdbi.v3.sqlobject.config.RegisterRowMapper;
import com.bsit.codegeneration.record.FgModProductEvent;
import com.bsit.codegeneration.mapper.FgModProductEventMapper;
import java.util.*;

@RegisterRowMapper(FgModProductEventMapper.class)
public interface FgModProductEventDao {

    @SqlQuery("SELECT * FROM FG_MOD_PRODUCT_EVENT")
    public List<FgModProductEvent> findAll();

    @SqlQuery("SELECT * FROM FG_MOD_PRODUCT_EVENT WHERE id = :id")
    public Optional<FgModProductEvent> findById(@Bind("id") Long id);

    @SqlUpdate("INSERT INTO FG_MOD_PRODUCT_EVENT(ID, VERSION_ID, IS_MASTER_VERSION, REFERENCE_ID, PARENT_REF_ID, PARENT_VERSION_ID, TYPE_CODE, SUB_TYPE_CODE, EVENT_CODE, EVENT_STAGE_CODE, EVENT_FORM_ID, EVENT_BO_REF_NO, EVENT_BO_CODE, ENTITY_REF_ID, ENTITY_VERSION_NO, ENTITY_TYPE_CODE, ENTITY_SUB_TYPE_CODE, ENTITY_BO_REF_NO, ENTITY_BO_CODE, TEMPLATE, STAGE_CODE, ACTIVE_CODE, STATUS_CODE, CREATED_ON, CREATED_BY, LAST_UPDATED_ON, LAST_UPDATED_BY, LAST_AUTHORISED_ON, LAST_AUTHORISED_BY, PROCESS_ID, EVENT_STATUS_CODE, EVENT_TYPE_CODE, EVENT_SUB_TYPE_CODE) VALUES (:ID, :VERSION_ID, :IS_MASTER_VERSION, :REFERENCE_ID, :PARENT_REF_ID, :PARENT_VERSION_ID, :TYPE_CODE, :SUB_TYPE_CODE, :EVENT_CODE, :EVENT_STAGE_CODE, :EVENT_FORM_ID, :EVENT_BO_REF_NO, :EVENT_BO_CODE, :ENTITY_REF_ID, :ENTITY_VERSION_NO, :ENTITY_TYPE_CODE, :ENTITY_SUB_TYPE_CODE, :ENTITY_BO_REF_NO, :ENTITY_BO_CODE, :TEMPLATE, :STAGE_CODE, :ACTIVE_CODE, :STATUS_CODE, :CREATED_ON, :CREATED_BY, :LAST_UPDATED_ON, :LAST_UPDATED_BY, :LAST_AUTHORISED_ON, :LAST_AUTHORISED_BY, :PROCESS_ID, :EVENT_STATUS_CODE, :EVENT_TYPE_CODE, :EVENT_SUB_TYPE_CODE)")
    @GetGeneratedKeys()
    public Long insert(@BindBean() FgModProductEvent entity);

    @SqlQuery("UPDATE FG_MOD_PRODUCT_EVENT SET ID = :ID, VERSION_ID = :VERSION_ID, IS_MASTER_VERSION = :IS_MASTER_VERSION, REFERENCE_ID = :REFERENCE_ID, PARENT_REF_ID = :PARENT_REF_ID, PARENT_VERSION_ID = :PARENT_VERSION_ID, TYPE_CODE = :TYPE_CODE, SUB_TYPE_CODE = :SUB_TYPE_CODE, EVENT_CODE = :EVENT_CODE, EVENT_STAGE_CODE = :EVENT_STAGE_CODE, EVENT_FORM_ID = :EVENT_FORM_ID, EVENT_BO_REF_NO = :EVENT_BO_REF_NO, EVENT_BO_CODE = :EVENT_BO_CODE, ENTITY_REF_ID = :ENTITY_REF_ID, ENTITY_VERSION_NO = :ENTITY_VERSION_NO, ENTITY_TYPE_CODE = :ENTITY_TYPE_CODE, ENTITY_SUB_TYPE_CODE = :ENTITY_SUB_TYPE_CODE, ENTITY_BO_REF_NO = :ENTITY_BO_REF_NO, ENTITY_BO_CODE = :ENTITY_BO_CODE, TEMPLATE = :TEMPLATE, STAGE_CODE = :STAGE_CODE, ACTIVE_CODE = :ACTIVE_CODE, STATUS_CODE = :STATUS_CODE, CREATED_ON = :CREATED_ON, CREATED_BY = :CREATED_BY, LAST_UPDATED_ON = :LAST_UPDATED_ON, LAST_UPDATED_BY = :LAST_UPDATED_BY, LAST_AUTHORISED_ON = :LAST_AUTHORISED_ON, LAST_AUTHORISED_BY = :LAST_AUTHORISED_BY, PROCESS_ID = :PROCESS_ID, EVENT_STATUS_CODE = :EVENT_STATUS_CODE, EVENT_TYPE_CODE = :EVENT_TYPE_CODE, EVENT_SUB_TYPE_CODE = :EVENT_SUB_TYPE_CODE WHERE id = :id")
    public int update(@BindBean() FgModProductEvent entity);

    @SqlQuery("DELETE FROM FG_MOD_PRODUCT_EVENT WHERE id = :id")
    public int delete(@Bind("id") Long id);
}
