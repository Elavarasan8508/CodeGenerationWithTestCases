package com.bsit.codegeneration.dao;

import org.jdbi.v3.sqlobject.statement.SqlQuery;
import org.jdbi.v3.sqlobject.statement.SqlUpdate;
import org.jdbi.v3.sqlobject.statement.GetGeneratedKeys;
import org.jdbi.v3.sqlobject.customizer.Bind;
import org.jdbi.v3.sqlobject.customizer.BindBean;
import org.jdbi.v3.sqlobject.config.RegisterRowMapper;
import com.bsit.codegeneration.record.FgSdkScheduleRule;
import com.bsit.codegeneration.mapper.FgSdkScheduleRuleMapper;
import java.util.*;

@RegisterRowMapper(FgSdkScheduleRuleMapper.class)
public interface FgSdkScheduleRuleDao {

    @SqlQuery("SELECT * FROM FG_SDK_SCHEDULE_RULE")
    public List<FgSdkScheduleRule> findAll();

    @SqlQuery("SELECT * FROM FG_SDK_SCHEDULE_RULE WHERE id = :id")
    public Optional<FgSdkScheduleRule> findById(@Bind("id") String id);

    @SqlUpdate("INSERT INTO FG_SDK_SCHEDULE_RULE(ID, REFERENCE_ID, TYPE_CODE, SUB_TYPE_CODE, ACTIVE_CODE, STAGE_CODE, STATUS_CODE, PROCESS_ID, CREATED_ON, CREATED_BY, LAST_UPDATED_ON, LAST_UPDATED_BY, LAST_AUTHORISED_ON, LAST_AUTHORISED_BY, TEMPLATE, APPLICANT_PARTY, FULFILLMENT_PARTY, IS_TEMPLATE, SCHEDULE_TYPE, SUBSCRIPTION_NAME, OWNER_ORG_TYPE_CODE, OWNER_ORG_CODE, SUBSCRIBER_ORG_TYPE_CODE, SUBSCRIBER_ORG_CODE, CRON_EXPRESSION, SCHEDULE_CHANNEL_CODE, ALERT_TEMPLATE_ID, EXTERNAL_EMAIL, CHANNEL_EMAIL_TITLE, CHANNEL_EMAIL_CONTENT, SCHEDULE_START_DATE, SCHEDULE_END_DATE, H2H_DATASOURCE_ID, H2H_DATASET_ID, ENTITY_SUB_TYPE_CODE, SOURCE_REF_ID, VERSION_ID, IS_MASTER_VERSION, CRON_OBJ) VALUES (:ID, :REFERENCE_ID, :TYPE_CODE, :SUB_TYPE_CODE, :ACTIVE_CODE, :STAGE_CODE, :STATUS_CODE, :PROCESS_ID, :CREATED_ON, :CREATED_BY, :LAST_UPDATED_ON, :LAST_UPDATED_BY, :LAST_AUTHORISED_ON, :LAST_AUTHORISED_BY, :TEMPLATE, :APPLICANT_PARTY, :FULFILLMENT_PARTY, :IS_TEMPLATE, :SCHEDULE_TYPE, :SUBSCRIPTION_NAME, :OWNER_ORG_TYPE_CODE, :OWNER_ORG_CODE, :SUBSCRIBER_ORG_TYPE_CODE, :SUBSCRIBER_ORG_CODE, :CRON_EXPRESSION, :SCHEDULE_CHANNEL_CODE, :ALERT_TEMPLATE_ID, :EXTERNAL_EMAIL, :CHANNEL_EMAIL_TITLE, :CHANNEL_EMAIL_CONTENT, :SCHEDULE_START_DATE, :SCHEDULE_END_DATE, :H2H_DATASOURCE_ID, :H2H_DATASET_ID, :ENTITY_SUB_TYPE_CODE, :SOURCE_REF_ID, :VERSION_ID, :IS_MASTER_VERSION, :CRON_OBJ)")
    @GetGeneratedKeys()
    public String insert(@BindBean() FgSdkScheduleRule entity);

    @SqlQuery("UPDATE FG_SDK_SCHEDULE_RULE SET ID = :ID, REFERENCE_ID = :REFERENCE_ID, TYPE_CODE = :TYPE_CODE, SUB_TYPE_CODE = :SUB_TYPE_CODE, ACTIVE_CODE = :ACTIVE_CODE, STAGE_CODE = :STAGE_CODE, STATUS_CODE = :STATUS_CODE, PROCESS_ID = :PROCESS_ID, CREATED_ON = :CREATED_ON, CREATED_BY = :CREATED_BY, LAST_UPDATED_ON = :LAST_UPDATED_ON, LAST_UPDATED_BY = :LAST_UPDATED_BY, LAST_AUTHORISED_ON = :LAST_AUTHORISED_ON, LAST_AUTHORISED_BY = :LAST_AUTHORISED_BY, TEMPLATE = :TEMPLATE, APPLICANT_PARTY = :APPLICANT_PARTY, FULFILLMENT_PARTY = :FULFILLMENT_PARTY, IS_TEMPLATE = :IS_TEMPLATE, SCHEDULE_TYPE = :SCHEDULE_TYPE, SUBSCRIPTION_NAME = :SUBSCRIPTION_NAME, OWNER_ORG_TYPE_CODE = :OWNER_ORG_TYPE_CODE, OWNER_ORG_CODE = :OWNER_ORG_CODE, SUBSCRIBER_ORG_TYPE_CODE = :SUBSCRIBER_ORG_TYPE_CODE, SUBSCRIBER_ORG_CODE = :SUBSCRIBER_ORG_CODE, CRON_EXPRESSION = :CRON_EXPRESSION, SCHEDULE_CHANNEL_CODE = :SCHEDULE_CHANNEL_CODE, ALERT_TEMPLATE_ID = :ALERT_TEMPLATE_ID, EXTERNAL_EMAIL = :EXTERNAL_EMAIL, CHANNEL_EMAIL_TITLE = :CHANNEL_EMAIL_TITLE, CHANNEL_EMAIL_CONTENT = :CHANNEL_EMAIL_CONTENT, SCHEDULE_START_DATE = :SCHEDULE_START_DATE, SCHEDULE_END_DATE = :SCHEDULE_END_DATE, H2H_DATASOURCE_ID = :H2H_DATASOURCE_ID, H2H_DATASET_ID = :H2H_DATASET_ID, ENTITY_SUB_TYPE_CODE = :ENTITY_SUB_TYPE_CODE, SOURCE_REF_ID = :SOURCE_REF_ID, VERSION_ID = :VERSION_ID, IS_MASTER_VERSION = :IS_MASTER_VERSION, CRON_OBJ = :CRON_OBJ WHERE id = :id")
    public int update(@BindBean() FgSdkScheduleRule entity);

    @SqlQuery("DELETE FROM FG_SDK_SCHEDULE_RULE WHERE id = :id")
    public int delete(@Bind("id") String id);
}
