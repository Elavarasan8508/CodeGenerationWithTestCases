package com.bsit.codegeneration.dao;

import org.jdbi.v3.sqlobject.statement.SqlQuery;
import org.jdbi.v3.sqlobject.statement.SqlUpdate;
import org.jdbi.v3.sqlobject.statement.GetGeneratedKeys;
import org.jdbi.v3.sqlobject.customizer.Bind;
import org.jdbi.v3.sqlobject.customizer.BindBean;
import org.jdbi.v3.sqlobject.config.RegisterRowMapper;
import com.bsit.codegeneration.record.FgGodrejBoyce;
import com.bsit.codegeneration.mapper.FgGodrejBoyceMapper;
import java.util.*;

@RegisterRowMapper(FgGodrejBoyceMapper.class)
public interface FgGodrejBoyceDao {

    @SqlQuery("SELECT * FROM FG_GODREJ_BOYCE")
    public List<FgGodrejBoyce> findAll();

    @SqlQuery("SELECT * FROM FG_GODREJ_BOYCE WHERE id = :id")
    public Optional<FgGodrejBoyce> findById(@Bind("id") String id);

    @SqlUpdate("INSERT INTO FG_GODREJ_BOYCE(ID, REFERENCE_ID, TYPE_CODE, SUB_TYPE_CODE, ACTIVE_CODE, STAGE_CODE, STATUS_CODE, CREATED_ON, CREATED_BY, LAST_UPDATED_ON, LAST_UPDATED_BY, LAST_AUTHORISED_ON, LAST_AUTHORISED_BY, TEMPLATE, IS_TEMPLATE, SELLER_ID, SUPPLIER_NAME, BUYER_ID, INVOICE_DATE, INVOICE_NO, INVOICE_AMOUNT, CURRENCY, DUE_DATE, REFERENCE_NO, UPLOAD_REF_ID, REMARKS, LINE_NO, SR_NO, TEST1, TEST2, TEST3, TEST4, AUTH_EQUIVALENT_AMOUNT, AUTH_EQUIVALENT_CURRENCY, DISPLAY_EQUIVALENT_AMOUNT, DISPLAY_EQUIVALENT_CURRENCY, EQUIVALENT_AMOUNT, EQUIVALENT_CURRENCY, AUTH_FX_BASE_RATE, DISPLAY_FX_BASE_RATE, APPLICANT_PARTY_CODE, ISSUING_PARTY_CODE, APPLICANT_PARTY, LAYOUT_TEMPLATE_ID, LAYOUT_NAME, FILE_NAME, BATCH_STATUS, BATCH_REF_ID, BATCH_REMARKS, TI_STATUS, TI_BATCH_REF_ID, TI_REMARKS, TNX_DISPLAY_STATUS, TNX_DISPLAY_BATCH_ID, TNX_DISPLAY_REMARKS, ADVANCE_INTEREST, NET_PAYMENT, VALUE_DATE, UTR_NUMBER, CHARGES, FREE_TEXT_1, FREE_TEXT_2, FREE_TEXT_3, PROGRAM_TYPE, CUSTOM_MATURITY_DATE, LAYOUT_ID, LAYOUT_UUID, LOAN_REQUEST_TYPE, PORTAL_BATCH_REF_ID, FINANCE_PARTY, FINANCE_REQUEST_STATUS, FINANCE_REQUESTED) VALUES (:ID, :REFERENCE_ID, :TYPE_CODE, :SUB_TYPE_CODE, :ACTIVE_CODE, :STAGE_CODE, :STATUS_CODE, :CREATED_ON, :CREATED_BY, :LAST_UPDATED_ON, :LAST_UPDATED_BY, :LAST_AUTHORISED_ON, :LAST_AUTHORISED_BY, :TEMPLATE, :IS_TEMPLATE, :SELLER_ID, :SUPPLIER_NAME, :BUYER_ID, :INVOICE_DATE, :INVOICE_NO, :INVOICE_AMOUNT, :CURRENCY, :DUE_DATE, :REFERENCE_NO, :UPLOAD_REF_ID, :REMARKS, :LINE_NO, :SR_NO, :TEST1, :TEST2, :TEST3, :TEST4, :AUTH_EQUIVALENT_AMOUNT, :AUTH_EQUIVALENT_CURRENCY, :DISPLAY_EQUIVALENT_AMOUNT, :DISPLAY_EQUIVALENT_CURRENCY, :EQUIVALENT_AMOUNT, :EQUIVALENT_CURRENCY, :AUTH_FX_BASE_RATE, :DISPLAY_FX_BASE_RATE, :APPLICANT_PARTY_CODE, :ISSUING_PARTY_CODE, :APPLICANT_PARTY, :LAYOUT_TEMPLATE_ID, :LAYOUT_NAME, :FILE_NAME, :BATCH_STATUS, :BATCH_REF_ID, :BATCH_REMARKS, :TI_STATUS, :TI_BATCH_REF_ID, :TI_REMARKS, :TNX_DISPLAY_STATUS, :TNX_DISPLAY_BATCH_ID, :TNX_DISPLAY_REMARKS, :ADVANCE_INTEREST, :NET_PAYMENT, :VALUE_DATE, :UTR_NUMBER, :CHARGES, :FREE_TEXT_1, :FREE_TEXT_2, :FREE_TEXT_3, :PROGRAM_TYPE, :CUSTOM_MATURITY_DATE, :LAYOUT_ID, :LAYOUT_UUID, :LOAN_REQUEST_TYPE, :PORTAL_BATCH_REF_ID, :FINANCE_PARTY, :FINANCE_REQUEST_STATUS, :FINANCE_REQUESTED)")
    @GetGeneratedKeys()
    public String insert(@BindBean() FgGodrejBoyce entity);

    @SqlQuery("UPDATE FG_GODREJ_BOYCE SET ID = :ID, REFERENCE_ID = :REFERENCE_ID, TYPE_CODE = :TYPE_CODE, SUB_TYPE_CODE = :SUB_TYPE_CODE, ACTIVE_CODE = :ACTIVE_CODE, STAGE_CODE = :STAGE_CODE, STATUS_CODE = :STATUS_CODE, CREATED_ON = :CREATED_ON, CREATED_BY = :CREATED_BY, LAST_UPDATED_ON = :LAST_UPDATED_ON, LAST_UPDATED_BY = :LAST_UPDATED_BY, LAST_AUTHORISED_ON = :LAST_AUTHORISED_ON, LAST_AUTHORISED_BY = :LAST_AUTHORISED_BY, TEMPLATE = :TEMPLATE, IS_TEMPLATE = :IS_TEMPLATE, SELLER_ID = :SELLER_ID, SUPPLIER_NAME = :SUPPLIER_NAME, BUYER_ID = :BUYER_ID, INVOICE_DATE = :INVOICE_DATE, INVOICE_NO = :INVOICE_NO, INVOICE_AMOUNT = :INVOICE_AMOUNT, CURRENCY = :CURRENCY, DUE_DATE = :DUE_DATE, REFERENCE_NO = :REFERENCE_NO, UPLOAD_REF_ID = :UPLOAD_REF_ID, REMARKS = :REMARKS, LINE_NO = :LINE_NO, SR_NO = :SR_NO, TEST1 = :TEST1, TEST2 = :TEST2, TEST3 = :TEST3, TEST4 = :TEST4, AUTH_EQUIVALENT_AMOUNT = :AUTH_EQUIVALENT_AMOUNT, AUTH_EQUIVALENT_CURRENCY = :AUTH_EQUIVALENT_CURRENCY, DISPLAY_EQUIVALENT_AMOUNT = :DISPLAY_EQUIVALENT_AMOUNT, DISPLAY_EQUIVALENT_CURRENCY = :DISPLAY_EQUIVALENT_CURRENCY, EQUIVALENT_AMOUNT = :EQUIVALENT_AMOUNT, EQUIVALENT_CURRENCY = :EQUIVALENT_CURRENCY, AUTH_FX_BASE_RATE = :AUTH_FX_BASE_RATE, DISPLAY_FX_BASE_RATE = :DISPLAY_FX_BASE_RATE, APPLICANT_PARTY_CODE = :APPLICANT_PARTY_CODE, ISSUING_PARTY_CODE = :ISSUING_PARTY_CODE, APPLICANT_PARTY = :APPLICANT_PARTY, LAYOUT_TEMPLATE_ID = :LAYOUT_TEMPLATE_ID, LAYOUT_NAME = :LAYOUT_NAME, FILE_NAME = :FILE_NAME, BATCH_STATUS = :BATCH_STATUS, BATCH_REF_ID = :BATCH_REF_ID, BATCH_REMARKS = :BATCH_REMARKS, TI_STATUS = :TI_STATUS, TI_BATCH_REF_ID = :TI_BATCH_REF_ID, TI_REMARKS = :TI_REMARKS, TNX_DISPLAY_STATUS = :TNX_DISPLAY_STATUS, TNX_DISPLAY_BATCH_ID = :TNX_DISPLAY_BATCH_ID, TNX_DISPLAY_REMARKS = :TNX_DISPLAY_REMARKS, ADVANCE_INTEREST = :ADVANCE_INTEREST, NET_PAYMENT = :NET_PAYMENT, VALUE_DATE = :VALUE_DATE, UTR_NUMBER = :UTR_NUMBER, CHARGES = :CHARGES, FREE_TEXT_1 = :FREE_TEXT_1, FREE_TEXT_2 = :FREE_TEXT_2, FREE_TEXT_3 = :FREE_TEXT_3, PROGRAM_TYPE = :PROGRAM_TYPE, CUSTOM_MATURITY_DATE = :CUSTOM_MATURITY_DATE, LAYOUT_ID = :LAYOUT_ID, LAYOUT_UUID = :LAYOUT_UUID, LOAN_REQUEST_TYPE = :LOAN_REQUEST_TYPE, PORTAL_BATCH_REF_ID = :PORTAL_BATCH_REF_ID, FINANCE_PARTY = :FINANCE_PARTY, FINANCE_REQUEST_STATUS = :FINANCE_REQUEST_STATUS, FINANCE_REQUESTED = :FINANCE_REQUESTED WHERE id = :id")
    public int update(@BindBean() FgGodrejBoyce entity);

    @SqlQuery("DELETE FROM FG_GODREJ_BOYCE WHERE id = :id")
    public int delete(@Bind("id") String id);
}
