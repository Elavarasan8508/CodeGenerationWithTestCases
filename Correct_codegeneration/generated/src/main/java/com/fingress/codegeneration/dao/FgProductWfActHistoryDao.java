package com.bsit.codegeneration.dao;

import org.jdbi.v3.sqlobject.statement.SqlQuery;
import org.jdbi.v3.sqlobject.statement.SqlUpdate;
import org.jdbi.v3.sqlobject.statement.GetGeneratedKeys;
import org.jdbi.v3.sqlobject.customizer.Bind;
import org.jdbi.v3.sqlobject.customizer.BindBean;
import org.jdbi.v3.sqlobject.config.RegisterRowMapper;
import com.bsit.codegeneration.record.FgProductWfActHistory;
import com.bsit.codegeneration.mapper.FgProductWfActHistoryMapper;
import java.util.*;

@RegisterRowMapper(FgProductWfActHistoryMapper.class)
public interface FgProductWfActHistoryDao {

    @SqlQuery("SELECT * FROM FG_PRODUCT_WF_ACT_HISTORY")
    public List<FgProductWfActHistory> findAll();

    @SqlQuery("SELECT * FROM FG_PRODUCT_WF_ACT_HISTORY WHERE id = :id")
    public Optional<FgProductWfActHistory> findById(@Bind("id") String id);

    @SqlUpdate("INSERT INTO FG_PRODUCT_WF_ACT_HISTORY(WF_PROCESS_ID, WF_DEFINITION_ID, WF_ACTIVITY_ID, WF_ACTIVITY_TYPE_CODE, PERF_PARTY_CODE, PERF_PARTY_USER_CODE, WF_ACTIVITY_START_DATE, WF_ACTIVITY_END_DATE, WF_ACTIVITY_RESULT_CODE, WF_ACTIVITY_ACTION_CODE, ACTIVE_CODE, STATUS_CODE, CREATED_BY, CREATED_ON, LAST_UPDATED_BY, LAST_UPDATED_ON, LAST_AUTHORISED_BY, LAST_AUTHORISED_ON, STAGE_CODE, MESSAGE, WF_TASK_NAME, ENTITY_REF_ID, ENTITY_VERSION_ID, ENTITY_TYPE_CODE, ENTITY_SUB_TYPE_CODE, ID, TASK_CONSENT, IS_TASK_CONSENT) VALUES (:WF_PROCESS_ID, :WF_DEFINITION_ID, :WF_ACTIVITY_ID, :WF_ACTIVITY_TYPE_CODE, :PERF_PARTY_CODE, :PERF_PARTY_USER_CODE, :WF_ACTIVITY_START_DATE, :WF_ACTIVITY_END_DATE, :WF_ACTIVITY_RESULT_CODE, :WF_ACTIVITY_ACTION_CODE, :ACTIVE_CODE, :STATUS_CODE, :CREATED_BY, :CREATED_ON, :LAST_UPDATED_BY, :LAST_UPDATED_ON, :LAST_AUTHORISED_BY, :LAST_AUTHORISED_ON, :STAGE_CODE, :MESSAGE, :WF_TASK_NAME, :ENTITY_REF_ID, :ENTITY_VERSION_ID, :ENTITY_TYPE_CODE, :ENTITY_SUB_TYPE_CODE, :ID, :TASK_CONSENT, :IS_TASK_CONSENT)")
    @GetGeneratedKeys()
    public String insert(@BindBean() FgProductWfActHistory entity);

    @SqlQuery("UPDATE FG_PRODUCT_WF_ACT_HISTORY SET WF_PROCESS_ID = :WF_PROCESS_ID, WF_DEFINITION_ID = :WF_DEFINITION_ID, WF_ACTIVITY_ID = :WF_ACTIVITY_ID, WF_ACTIVITY_TYPE_CODE = :WF_ACTIVITY_TYPE_CODE, PERF_PARTY_CODE = :PERF_PARTY_CODE, PERF_PARTY_USER_CODE = :PERF_PARTY_USER_CODE, WF_ACTIVITY_START_DATE = :WF_ACTIVITY_START_DATE, WF_ACTIVITY_END_DATE = :WF_ACTIVITY_END_DATE, WF_ACTIVITY_RESULT_CODE = :WF_ACTIVITY_RESULT_CODE, WF_ACTIVITY_ACTION_CODE = :WF_ACTIVITY_ACTION_CODE, ACTIVE_CODE = :ACTIVE_CODE, STATUS_CODE = :STATUS_CODE, CREATED_BY = :CREATED_BY, CREATED_ON = :CREATED_ON, LAST_UPDATED_BY = :LAST_UPDATED_BY, LAST_UPDATED_ON = :LAST_UPDATED_ON, LAST_AUTHORISED_BY = :LAST_AUTHORISED_BY, LAST_AUTHORISED_ON = :LAST_AUTHORISED_ON, STAGE_CODE = :STAGE_CODE, MESSAGE = :MESSAGE, WF_TASK_NAME = :WF_TASK_NAME, ENTITY_REF_ID = :ENTITY_REF_ID, ENTITY_VERSION_ID = :ENTITY_VERSION_ID, ENTITY_TYPE_CODE = :ENTITY_TYPE_CODE, ENTITY_SUB_TYPE_CODE = :ENTITY_SUB_TYPE_CODE, ID = :ID, TASK_CONSENT = :TASK_CONSENT, IS_TASK_CONSENT = :IS_TASK_CONSENT WHERE id = :id")
    public int update(@BindBean() FgProductWfActHistory entity);

    @SqlQuery("DELETE FROM FG_PRODUCT_WF_ACT_HISTORY WHERE id = :id")
    public int delete(@Bind("id") String id);
}
