package com.bsit.codegeneration.dao;

import org.jdbi.v3.sqlobject.statement.SqlQuery;
import org.jdbi.v3.sqlobject.statement.SqlUpdate;
import org.jdbi.v3.sqlobject.statement.GetGeneratedKeys;
import org.jdbi.v3.sqlobject.customizer.Bind;
import org.jdbi.v3.sqlobject.customizer.BindBean;
import org.jdbi.v3.sqlobject.config.RegisterRowMapper;
import com.bsit.codegeneration.record.FgPartyOrgMembership;
import com.bsit.codegeneration.mapper.FgPartyOrgMembershipMapper;
import java.util.*;

@RegisterRowMapper(FgPartyOrgMembershipMapper.class)
public interface FgPartyOrgMembershipDao {

    @SqlQuery("SELECT * FROM FG_PARTY_ORG_MEMBERSHIP")
    public List<FgPartyOrgMembership> findAll();

    @SqlQuery("SELECT * FROM FG_PARTY_ORG_MEMBERSHIP WHERE id = :id")
    public Optional<FgPartyOrgMembership> findById(@Bind("id") Long id);

    @SqlUpdate("INSERT INTO FG_PARTY_ORG_MEMBERSHIP(ID, PARTY_ID, PARTY_VERSION_ID, PARTY_SUB_TYPE_CODE, PARTY_CODE, MEMBER_CAT_CODE, MEMBER_TYPE_CODE, MEMBER_SUB_TYPE_CODE, PARTY_USER_ID, PARTY_USER_VERSION_ID, USER_LOGIN_ID, NAME, AGE, ADDRESS, QUALIFICATION, DESIGNATION_CODE, TITLE_CODE, NET_WORTH, RELATIONSHIP_CODE, SHARE_HOLDING_CODE, SHARE_PERCENTAGE, COMMENTS, ACTIVE_CODE, STATUS_CODE, CREATED_ON, CREATED_BY, LAST_UPDATED_ON, LAST_UPDATED_BY, LAST_AUTHORISED_ON, LAST_AUTHORISED_BY, USER_SUB_TYPE_CODE, EMAIL_ID, PHONE_NO) VALUES (:ID, :PARTY_ID, :PARTY_VERSION_ID, :PARTY_SUB_TYPE_CODE, :PARTY_CODE, :MEMBER_CAT_CODE, :MEMBER_TYPE_CODE, :MEMBER_SUB_TYPE_CODE, :PARTY_USER_ID, :PARTY_USER_VERSION_ID, :USER_LOGIN_ID, :NAME, :AGE, :ADDRESS, :QUALIFICATION, :DESIGNATION_CODE, :TITLE_CODE, :NET_WORTH, :RELATIONSHIP_CODE, :SHARE_HOLDING_CODE, :SHARE_PERCENTAGE, :COMMENTS, :ACTIVE_CODE, :STATUS_CODE, :CREATED_ON, :CREATED_BY, :LAST_UPDATED_ON, :LAST_UPDATED_BY, :LAST_AUTHORISED_ON, :LAST_AUTHORISED_BY, :USER_SUB_TYPE_CODE, :EMAIL_ID, :PHONE_NO)")
    @GetGeneratedKeys()
    public Long insert(@BindBean() FgPartyOrgMembership entity);

    @SqlQuery("UPDATE FG_PARTY_ORG_MEMBERSHIP SET ID = :ID, PARTY_ID = :PARTY_ID, PARTY_VERSION_ID = :PARTY_VERSION_ID, PARTY_SUB_TYPE_CODE = :PARTY_SUB_TYPE_CODE, PARTY_CODE = :PARTY_CODE, MEMBER_CAT_CODE = :MEMBER_CAT_CODE, MEMBER_TYPE_CODE = :MEMBER_TYPE_CODE, MEMBER_SUB_TYPE_CODE = :MEMBER_SUB_TYPE_CODE, PARTY_USER_ID = :PARTY_USER_ID, PARTY_USER_VERSION_ID = :PARTY_USER_VERSION_ID, USER_LOGIN_ID = :USER_LOGIN_ID, NAME = :NAME, AGE = :AGE, ADDRESS = :ADDRESS, QUALIFICATION = :QUALIFICATION, DESIGNATION_CODE = :DESIGNATION_CODE, TITLE_CODE = :TITLE_CODE, NET_WORTH = :NET_WORTH, RELATIONSHIP_CODE = :RELATIONSHIP_CODE, SHARE_HOLDING_CODE = :SHARE_HOLDING_CODE, SHARE_PERCENTAGE = :SHARE_PERCENTAGE, COMMENTS = :COMMENTS, ACTIVE_CODE = :ACTIVE_CODE, STATUS_CODE = :STATUS_CODE, CREATED_ON = :CREATED_ON, CREATED_BY = :CREATED_BY, LAST_UPDATED_ON = :LAST_UPDATED_ON, LAST_UPDATED_BY = :LAST_UPDATED_BY, LAST_AUTHORISED_ON = :LAST_AUTHORISED_ON, LAST_AUTHORISED_BY = :LAST_AUTHORISED_BY, USER_SUB_TYPE_CODE = :USER_SUB_TYPE_CODE, EMAIL_ID = :EMAIL_ID, PHONE_NO = :PHONE_NO WHERE id = :id")
    public int update(@BindBean() FgPartyOrgMembership entity);

    @SqlQuery("DELETE FROM FG_PARTY_ORG_MEMBERSHIP WHERE id = :id")
    public int delete(@Bind("id") Long id);
}
