package com.bsit.codegeneration.dao;

import org.jdbi.v3.sqlobject.statement.SqlQuery;
import org.jdbi.v3.sqlobject.statement.SqlUpdate;
import org.jdbi.v3.sqlobject.statement.GetGeneratedKeys;
import org.jdbi.v3.sqlobject.customizer.Bind;
import org.jdbi.v3.sqlobject.customizer.BindBean;
import org.jdbi.v3.sqlobject.config.RegisterRowMapper;
import com.bsit.codegeneration.record.FgModProductRelation;
import com.bsit.codegeneration.mapper.FgModProductRelationMapper;
import java.util.*;

@RegisterRowMapper(FgModProductRelationMapper.class)
public interface FgModProductRelationDao {

    @SqlQuery("SELECT * FROM FG_MOD_PRODUCT_RELATION")
    public List<FgModProductRelation> findAll();

    @SqlQuery("SELECT * FROM FG_MOD_PRODUCT_RELATION WHERE id = :id")
    public Optional<FgModProductRelation> findById(@Bind("id") Long id);

    @SqlUpdate("INSERT INTO FG_MOD_PRODUCT_RELATION(ID, REFERENCE_ID, TYPE_CODE, SUB_TYPE_CODE, SRC_REF_ID, SRC_TYPE_CODE, SRC_SUB_TYPE_CODE, SRC_RELATION_CODE, SRC_APPLICANT_PARTY_ROLE, SRC_APPLICANT_PARTY_CODE, SRC_ISSUING_PARTY_ROLE, SRC_ISSUING_PARTY_CODE, TRG_REF_ID, TRG_TYPE_CODE, TRG_SUB_TYPE_CODE, TRG_RELATION_CODE, TRG_APPLICANT_PARTY_ROLE, TRG_APPLICANT_PARTY_CODE, TRG_ISSUING_PARTY_ROLE, TRG_ISSUING_PARTY_CODE, TRG_FORM_ID, ACTIVE_CODE, STATUS_CODE, CREATED_ON, CREATED_BY, LAST_UPDATED_ON, LAST_UPDATED_BY, LAST_AUTHORISED_ON, LAST_AUTHORISED_BY, SRC_VERSION_ID, TRG_VERSION_ID) VALUES (:ID, :REFERENCE_ID, :TYPE_CODE, :SUB_TYPE_CODE, :SRC_REF_ID, :SRC_TYPE_CODE, :SRC_SUB_TYPE_CODE, :SRC_RELATION_CODE, :SRC_APPLICANT_PARTY_ROLE, :SRC_APPLICANT_PARTY_CODE, :SRC_ISSUING_PARTY_ROLE, :SRC_ISSUING_PARTY_CODE, :TRG_REF_ID, :TRG_TYPE_CODE, :TRG_SUB_TYPE_CODE, :TRG_RELATION_CODE, :TRG_APPLICANT_PARTY_ROLE, :TRG_APPLICANT_PARTY_CODE, :TRG_ISSUING_PARTY_ROLE, :TRG_ISSUING_PARTY_CODE, :TRG_FORM_ID, :ACTIVE_CODE, :STATUS_CODE, :CREATED_ON, :CREATED_BY, :LAST_UPDATED_ON, :LAST_UPDATED_BY, :LAST_AUTHORISED_ON, :LAST_AUTHORISED_BY, :SRC_VERSION_ID, :TRG_VERSION_ID)")
    @GetGeneratedKeys()
    public Long insert(@BindBean() FgModProductRelation entity);

    @SqlQuery("UPDATE FG_MOD_PRODUCT_RELATION SET ID = :ID, REFERENCE_ID = :REFERENCE_ID, TYPE_CODE = :TYPE_CODE, SUB_TYPE_CODE = :SUB_TYPE_CODE, SRC_REF_ID = :SRC_REF_ID, SRC_TYPE_CODE = :SRC_TYPE_CODE, SRC_SUB_TYPE_CODE = :SRC_SUB_TYPE_CODE, SRC_RELATION_CODE = :SRC_RELATION_CODE, SRC_APPLICANT_PARTY_ROLE = :SRC_APPLICANT_PARTY_ROLE, SRC_APPLICANT_PARTY_CODE = :SRC_APPLICANT_PARTY_CODE, SRC_ISSUING_PARTY_ROLE = :SRC_ISSUING_PARTY_ROLE, SRC_ISSUING_PARTY_CODE = :SRC_ISSUING_PARTY_CODE, TRG_REF_ID = :TRG_REF_ID, TRG_TYPE_CODE = :TRG_TYPE_CODE, TRG_SUB_TYPE_CODE = :TRG_SUB_TYPE_CODE, TRG_RELATION_CODE = :TRG_RELATION_CODE, TRG_APPLICANT_PARTY_ROLE = :TRG_APPLICANT_PARTY_ROLE, TRG_APPLICANT_PARTY_CODE = :TRG_APPLICANT_PARTY_CODE, TRG_ISSUING_PARTY_ROLE = :TRG_ISSUING_PARTY_ROLE, TRG_ISSUING_PARTY_CODE = :TRG_ISSUING_PARTY_CODE, TRG_FORM_ID = :TRG_FORM_ID, ACTIVE_CODE = :ACTIVE_CODE, STATUS_CODE = :STATUS_CODE, CREATED_ON = :CREATED_ON, CREATED_BY = :CREATED_BY, LAST_UPDATED_ON = :LAST_UPDATED_ON, LAST_UPDATED_BY = :LAST_UPDATED_BY, LAST_AUTHORISED_ON = :LAST_AUTHORISED_ON, LAST_AUTHORISED_BY = :LAST_AUTHORISED_BY, SRC_VERSION_ID = :SRC_VERSION_ID, TRG_VERSION_ID = :TRG_VERSION_ID WHERE id = :id")
    public int update(@BindBean() FgModProductRelation entity);

    @SqlQuery("DELETE FROM FG_MOD_PRODUCT_RELATION WHERE id = :id")
    public int delete(@Bind("id") Long id);
}
