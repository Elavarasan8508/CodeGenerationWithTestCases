package com.bsit.codegeneration.dao;

import org.jdbi.v3.sqlobject.statement.SqlQuery;
import org.jdbi.v3.sqlobject.statement.SqlUpdate;
import org.jdbi.v3.sqlobject.statement.GetGeneratedKeys;
import org.jdbi.v3.sqlobject.customizer.Bind;
import org.jdbi.v3.sqlobject.customizer.BindBean;
import org.jdbi.v3.sqlobject.config.RegisterRowMapper;
import com.bsit.codegeneration.record.FgPartyEntity;
import com.bsit.codegeneration.mapper.FgPartyEntityMapper;
import java.util.*;

@RegisterRowMapper(FgPartyEntityMapper.class)
public interface FgPartyEntityDao {

    @SqlQuery("SELECT * FROM FG_PARTY_ENTITY")
    public List<FgPartyEntity> findAll();

    @SqlQuery("SELECT * FROM FG_PARTY_ENTITY WHERE id = :id")
    public Optional<FgPartyEntity> findById(@Bind("id") Long id);

    @SqlUpdate("INSERT INTO FG_PARTY_ENTITY(ID, PARENT_PARTY_CODE, PARTY_CODE, PARTY_TYPE_CODE, PARTY_SUB_TYPE_CODE, ENTITY_REF_CODE, ENTITY_TYPE_CODE, ENTITY_SUB_TYPE_CODE, MASK, GRANTING, IS_MASTER, VERSION_NO, INITIATE_BY, IS_TRANSACTION, IS_VIEW, ACTIVE_CODE, STATUS_CODE, AUTH_STATUS_CODE, CREATED_ON, CREATED_BY, LAST_UPDATED_ON, LAST_UPDATED_BY, LAST_AUTHORISED_ON, LAST_AUTHORISED_BY, PARENT_PARTY_ID, PARENT_PARTY_VERSION_ID, PARTY_ID, PARTY_VERSION_ID, ENTITY_ID, ENTITY_VERSION_ID) VALUES (:ID, :PARENT_PARTY_CODE, :PARTY_CODE, :PARTY_TYPE_CODE, :PARTY_SUB_TYPE_CODE, :ENTITY_REF_CODE, :ENTITY_TYPE_CODE, :ENTITY_SUB_TYPE_CODE, :MASK, :GRANTING, :IS_MASTER, :VERSION_NO, :INITIATE_BY, :IS_TRANSACTION, :IS_VIEW, :ACTIVE_CODE, :STATUS_CODE, :AUTH_STATUS_CODE, :CREATED_ON, :CREATED_BY, :LAST_UPDATED_ON, :LAST_UPDATED_BY, :LAST_AUTHORISED_ON, :LAST_AUTHORISED_BY, :PARENT_PARTY_ID, :PARENT_PARTY_VERSION_ID, :PARTY_ID, :PARTY_VERSION_ID, :ENTITY_ID, :ENTITY_VERSION_ID)")
    @GetGeneratedKeys()
    public Long insert(@BindBean() FgPartyEntity entity);

    @SqlQuery("UPDATE FG_PARTY_ENTITY SET ID = :ID, PARENT_PARTY_CODE = :PARENT_PARTY_CODE, PARTY_CODE = :PARTY_CODE, PARTY_TYPE_CODE = :PARTY_TYPE_CODE, PARTY_SUB_TYPE_CODE = :PARTY_SUB_TYPE_CODE, ENTITY_REF_CODE = :ENTITY_REF_CODE, ENTITY_TYPE_CODE = :ENTITY_TYPE_CODE, ENTITY_SUB_TYPE_CODE = :ENTITY_SUB_TYPE_CODE, MASK = :MASK, GRANTING = :GRANTING, IS_MASTER = :IS_MASTER, VERSION_NO = :VERSION_NO, INITIATE_BY = :INITIATE_BY, IS_TRANSACTION = :IS_TRANSACTION, IS_VIEW = :IS_VIEW, ACTIVE_CODE = :ACTIVE_CODE, STATUS_CODE = :STATUS_CODE, AUTH_STATUS_CODE = :AUTH_STATUS_CODE, CREATED_ON = :CREATED_ON, CREATED_BY = :CREATED_BY, LAST_UPDATED_ON = :LAST_UPDATED_ON, LAST_UPDATED_BY = :LAST_UPDATED_BY, LAST_AUTHORISED_ON = :LAST_AUTHORISED_ON, LAST_AUTHORISED_BY = :LAST_AUTHORISED_BY, PARENT_PARTY_ID = :PARENT_PARTY_ID, PARENT_PARTY_VERSION_ID = :PARENT_PARTY_VERSION_ID, PARTY_ID = :PARTY_ID, PARTY_VERSION_ID = :PARTY_VERSION_ID, ENTITY_ID = :ENTITY_ID, ENTITY_VERSION_ID = :ENTITY_VERSION_ID WHERE id = :id")
    public int update(@BindBean() FgPartyEntity entity);

    @SqlQuery("DELETE FROM FG_PARTY_ENTITY WHERE id = :id")
    public int delete(@Bind("id") Long id);
}
