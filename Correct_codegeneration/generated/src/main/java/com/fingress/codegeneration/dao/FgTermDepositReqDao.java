package com.bsit.codegeneration.dao;

import org.jdbi.v3.sqlobject.statement.SqlQuery;
import org.jdbi.v3.sqlobject.statement.SqlUpdate;
import org.jdbi.v3.sqlobject.statement.GetGeneratedKeys;
import org.jdbi.v3.sqlobject.customizer.Bind;
import org.jdbi.v3.sqlobject.customizer.BindBean;
import org.jdbi.v3.sqlobject.config.RegisterRowMapper;
import com.bsit.codegeneration.record.FgTermDepositReq;
import com.bsit.codegeneration.mapper.FgTermDepositReqMapper;
import java.util.*;

@RegisterRowMapper(FgTermDepositReqMapper.class)
public interface FgTermDepositReqDao {

    @SqlQuery("SELECT * FROM FG_TERM_DEPOSIT_REQ")
    public List<FgTermDepositReq> findAll();

    @SqlQuery("SELECT * FROM FG_TERM_DEPOSIT_REQ WHERE id = :id")
    public Optional<FgTermDepositReq> findById(@Bind("id") String id);

    @SqlUpdate("INSERT INTO FG_TERM_DEPOSIT_REQ(ID, REFERENCE_ID, TYPE_CODE, SUB_TYPE_CODE, ACTIVE_CODE, STAGE_CODE, STATUS_CODE, PROCESS_ID, CREATED_ON, CREATED_BY, LAST_UPDATED_ON, LAST_UPDATED_BY, LAST_AUTHORISED_ON, LAST_AUTHORISED_BY, TEMPLATE, APPLICANT_PARTY, FULFILLMENT_PARTY, IS_TEMPLATE, USER_CRN, USER_NAME, USER_EMAIL, USER_MOBILE, DEPOSIT_AMOUNT, CCY, ACCOUNT_NAME, ACCOUNT_TYPE, TENURE_DAYS, CUSTOM_TENURE, INTEREST_RATE, MATURITY_DATE, PRODUCT_STATUS, TASK_REASON, DEBIT_ACC_NUM, INTEREST_ACCOUNT, PRINCIPAL_ACCOUNT, LIEN_AMOUNT, LIEN_MARKED, ACC_BALANCE, PRINCIPAL_AMOUNT, MATURITY_AMOUNT, INTEREST_AMOUNT, INTEREST_PAY_PLAN, INTEREST_DESCRIPTION, MATURITY_INSTRUCTION, SCHEME_CODE, USER_TYPE, TERMS, IT_TYPE, OTP_COUNT, OTP_RESENT, OTP_SENT_TIME, OTP_LOCKED_TIME, OTP_UNLOCK_TIME, OTP_FAILED_COUNT, TD_MIN_AMOUNT, TD_MAX_AMOUNT, MAX_BOOKING_LIMIT, UTILISED_BOOKING_LIMIT, AVAILABLE_BOOKING_LIMIT, PENDING_UTILISED_LIMIT, YEAR, MONTH, DAYS, TD_ACCOUNT_NUMBER, FINACLE_STATUS, OPTIONAL_RANGE, ORIGIN, TD_TYPE) VALUES (:ID, :REFERENCE_ID, :TYPE_CODE, :SUB_TYPE_CODE, :ACTIVE_CODE, :STAGE_CODE, :STATUS_CODE, :PROCESS_ID, :CREATED_ON, :CREATED_BY, :LAST_UPDATED_ON, :LAST_UPDATED_BY, :LAST_AUTHORISED_ON, :LAST_AUTHORISED_BY, :TEMPLATE, :APPLICANT_PARTY, :FULFILLMENT_PARTY, :IS_TEMPLATE, :USER_CRN, :USER_NAME, :USER_EMAIL, :USER_MOBILE, :DEPOSIT_AMOUNT, :CCY, :ACCOUNT_NAME, :ACCOUNT_TYPE, :TENURE_DAYS, :CUSTOM_TENURE, :INTEREST_RATE, :MATURITY_DATE, :PRODUCT_STATUS, :TASK_REASON, :DEBIT_ACC_NUM, :INTEREST_ACCOUNT, :PRINCIPAL_ACCOUNT, :LIEN_AMOUNT, :LIEN_MARKED, :ACC_BALANCE, :PRINCIPAL_AMOUNT, :MATURITY_AMOUNT, :INTEREST_AMOUNT, :INTEREST_PAY_PLAN, :INTEREST_DESCRIPTION, :MATURITY_INSTRUCTION, :SCHEME_CODE, :USER_TYPE, :TERMS, :IT_TYPE, :OTP_COUNT, :OTP_RESENT, :OTP_SENT_TIME, :OTP_LOCKED_TIME, :OTP_UNLOCK_TIME, :OTP_FAILED_COUNT, :TD_MIN_AMOUNT, :TD_MAX_AMOUNT, :MAX_BOOKING_LIMIT, :UTILISED_BOOKING_LIMIT, :AVAILABLE_BOOKING_LIMIT, :PENDING_UTILISED_LIMIT, :YEAR, :MONTH, :DAYS, :TD_ACCOUNT_NUMBER, :FINACLE_STATUS, :OPTIONAL_RANGE, :ORIGIN, :TD_TYPE)")
    @GetGeneratedKeys()
    public String insert(@BindBean() FgTermDepositReq entity);

    @SqlQuery("UPDATE FG_TERM_DEPOSIT_REQ SET ID = :ID, REFERENCE_ID = :REFERENCE_ID, TYPE_CODE = :TYPE_CODE, SUB_TYPE_CODE = :SUB_TYPE_CODE, ACTIVE_CODE = :ACTIVE_CODE, STAGE_CODE = :STAGE_CODE, STATUS_CODE = :STATUS_CODE, PROCESS_ID = :PROCESS_ID, CREATED_ON = :CREATED_ON, CREATED_BY = :CREATED_BY, LAST_UPDATED_ON = :LAST_UPDATED_ON, LAST_UPDATED_BY = :LAST_UPDATED_BY, LAST_AUTHORISED_ON = :LAST_AUTHORISED_ON, LAST_AUTHORISED_BY = :LAST_AUTHORISED_BY, TEMPLATE = :TEMPLATE, APPLICANT_PARTY = :APPLICANT_PARTY, FULFILLMENT_PARTY = :FULFILLMENT_PARTY, IS_TEMPLATE = :IS_TEMPLATE, USER_CRN = :USER_CRN, USER_NAME = :USER_NAME, USER_EMAIL = :USER_EMAIL, USER_MOBILE = :USER_MOBILE, DEPOSIT_AMOUNT = :DEPOSIT_AMOUNT, CCY = :CCY, ACCOUNT_NAME = :ACCOUNT_NAME, ACCOUNT_TYPE = :ACCOUNT_TYPE, TENURE_DAYS = :TENURE_DAYS, CUSTOM_TENURE = :CUSTOM_TENURE, INTEREST_RATE = :INTEREST_RATE, MATURITY_DATE = :MATURITY_DATE, PRODUCT_STATUS = :PRODUCT_STATUS, TASK_REASON = :TASK_REASON, DEBIT_ACC_NUM = :DEBIT_ACC_NUM, INTEREST_ACCOUNT = :INTEREST_ACCOUNT, PRINCIPAL_ACCOUNT = :PRINCIPAL_ACCOUNT, LIEN_AMOUNT = :LIEN_AMOUNT, LIEN_MARKED = :LIEN_MARKED, ACC_BALANCE = :ACC_BALANCE, PRINCIPAL_AMOUNT = :PRINCIPAL_AMOUNT, MATURITY_AMOUNT = :MATURITY_AMOUNT, INTEREST_AMOUNT = :INTEREST_AMOUNT, INTEREST_PAY_PLAN = :INTEREST_PAY_PLAN, INTEREST_DESCRIPTION = :INTEREST_DESCRIPTION, MATURITY_INSTRUCTION = :MATURITY_INSTRUCTION, SCHEME_CODE = :SCHEME_CODE, USER_TYPE = :USER_TYPE, TERMS = :TERMS, IT_TYPE = :IT_TYPE, OTP_COUNT = :OTP_COUNT, OTP_RESENT = :OTP_RESENT, OTP_SENT_TIME = :OTP_SENT_TIME, OTP_LOCKED_TIME = :OTP_LOCKED_TIME, OTP_UNLOCK_TIME = :OTP_UNLOCK_TIME, OTP_FAILED_COUNT = :OTP_FAILED_COUNT, TD_MIN_AMOUNT = :TD_MIN_AMOUNT, TD_MAX_AMOUNT = :TD_MAX_AMOUNT, MAX_BOOKING_LIMIT = :MAX_BOOKING_LIMIT, UTILISED_BOOKING_LIMIT = :UTILISED_BOOKING_LIMIT, AVAILABLE_BOOKING_LIMIT = :AVAILABLE_BOOKING_LIMIT, PENDING_UTILISED_LIMIT = :PENDING_UTILISED_LIMIT, YEAR = :YEAR, MONTH = :MONTH, DAYS = :DAYS, TD_ACCOUNT_NUMBER = :TD_ACCOUNT_NUMBER, FINACLE_STATUS = :FINACLE_STATUS, OPTIONAL_RANGE = :OPTIONAL_RANGE, ORIGIN = :ORIGIN, TD_TYPE = :TD_TYPE WHERE id = :id")
    public int update(@BindBean() FgTermDepositReq entity);

    @SqlQuery("DELETE FROM FG_TERM_DEPOSIT_REQ WHERE id = :id")
    public int delete(@Bind("id") String id);
}
