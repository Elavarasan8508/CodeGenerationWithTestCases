package com.bsit.codegeneration.dao;

import org.jdbi.v3.sqlobject.statement.SqlQuery;
import org.jdbi.v3.sqlobject.statement.SqlUpdate;
import org.jdbi.v3.sqlobject.statement.GetGeneratedKeys;
import org.jdbi.v3.sqlobject.customizer.Bind;
import org.jdbi.v3.sqlobject.customizer.BindBean;
import org.jdbi.v3.sqlobject.config.RegisterRowMapper;
import com.bsit.codegeneration.record.FgChargeManagement;
import com.bsit.codegeneration.mapper.FgChargeManagementMapper;
import java.util.*;

@RegisterRowMapper(FgChargeManagementMapper.class)
public interface FgChargeManagementDao {

    @SqlQuery("SELECT * FROM FG_CHARGE_MANAGEMENT")
    public List<FgChargeManagement> findAll();

    @SqlQuery("SELECT * FROM FG_CHARGE_MANAGEMENT WHERE id = :id")
    public Optional<FgChargeManagement> findById(@Bind("id") Long id);

    @SqlUpdate("INSERT INTO FG_CHARGE_MANAGEMENT(ID, REFERENCE_ID, VERSION_ID, PARTY_CODE, PARTY_SUB_TYPE_CODE, PRODUCT_CODE, EVENT_CODE, CATEGORY_CODE, CHARGE_TYPE_CODE, CHARGE_STATUS_CODE, CHARGE_CODE, CURRENCY_CODE, TAX_CODE, CHARGE_BASIS_CODE, IS_RECURRING, VALID_FROM, VALID_TO, CHARGE_AMOUNT, UOM_CODE, LIMIT_AMOUNT, FREE_LIMIT, LIMIT_PERIOD_CODE, CHARGE_PERCENTAGE, STATUS_CODE, ACTIVE_CODE, CREATED_ON, CREATED_BY, LAST_UPDATED_ON, LAST_UPDATED_BY, LAST_AUTHORISED_ON, LAST_AUTHORISED_BY, TEMPLATE) VALUES (:ID, :REFERENCE_ID, :VERSION_ID, :PARTY_CODE, :PARTY_SUB_TYPE_CODE, :PRODUCT_CODE, :EVENT_CODE, :CATEGORY_CODE, :CHARGE_TYPE_CODE, :CHARGE_STATUS_CODE, :CHARGE_CODE, :CURRENCY_CODE, :TAX_CODE, :CHARGE_BASIS_CODE, :IS_RECURRING, :VALID_FROM, :VALID_TO, :CHARGE_AMOUNT, :UOM_CODE, :LIMIT_AMOUNT, :FREE_LIMIT, :LIMIT_PERIOD_CODE, :CHARGE_PERCENTAGE, :STATUS_CODE, :ACTIVE_CODE, :CREATED_ON, :CREATED_BY, :LAST_UPDATED_ON, :LAST_UPDATED_BY, :LAST_AUTHORISED_ON, :LAST_AUTHORISED_BY, :TEMPLATE)")
    @GetGeneratedKeys()
    public Long insert(@BindBean() FgChargeManagement entity);

    @SqlQuery("UPDATE FG_CHARGE_MANAGEMENT SET ID = :ID, REFERENCE_ID = :REFERENCE_ID, VERSION_ID = :VERSION_ID, PARTY_CODE = :PARTY_CODE, PARTY_SUB_TYPE_CODE = :PARTY_SUB_TYPE_CODE, PRODUCT_CODE = :PRODUCT_CODE, EVENT_CODE = :EVENT_CODE, CATEGORY_CODE = :CATEGORY_CODE, CHARGE_TYPE_CODE = :CHARGE_TYPE_CODE, CHARGE_STATUS_CODE = :CHARGE_STATUS_CODE, CHARGE_CODE = :CHARGE_CODE, CURRENCY_CODE = :CURRENCY_CODE, TAX_CODE = :TAX_CODE, CHARGE_BASIS_CODE = :CHARGE_BASIS_CODE, IS_RECURRING = :IS_RECURRING, VALID_FROM = :VALID_FROM, VALID_TO = :VALID_TO, CHARGE_AMOUNT = :CHARGE_AMOUNT, UOM_CODE = :UOM_CODE, LIMIT_AMOUNT = :LIMIT_AMOUNT, FREE_LIMIT = :FREE_LIMIT, LIMIT_PERIOD_CODE = :LIMIT_PERIOD_CODE, CHARGE_PERCENTAGE = :CHARGE_PERCENTAGE, STATUS_CODE = :STATUS_CODE, ACTIVE_CODE = :ACTIVE_CODE, CREATED_ON = :CREATED_ON, CREATED_BY = :CREATED_BY, LAST_UPDATED_ON = :LAST_UPDATED_ON, LAST_UPDATED_BY = :LAST_UPDATED_BY, LAST_AUTHORISED_ON = :LAST_AUTHORISED_ON, LAST_AUTHORISED_BY = :LAST_AUTHORISED_BY, TEMPLATE = :TEMPLATE WHERE id = :id")
    public int update(@BindBean() FgChargeManagement entity);

    @SqlQuery("DELETE FROM FG_CHARGE_MANAGEMENT WHERE id = :id")
    public int delete(@Bind("id") Long id);
}
